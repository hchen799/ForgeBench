#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("m_axi_mem1_AWVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_mem1_AWREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_mem1_AWADDR", 64, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_mem1_AWID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_mem1_AWLEN", 8, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_mem1_AWSIZE", 3, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_mem1_AWBURST", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_mem1_AWLOCK", 2, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_mem1_AWCACHE", 4, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_mem1_AWPROT", 3, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_mem1_AWQOS", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_mem1_AWREGION", 4, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_mem1_AWUSER", 1, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_mem1_WVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_mem1_WREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_mem1_WDATA", 32, hls_out, 0, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_mem1_WSTRB", 4, hls_out, 0, "m_axi", "STRB", 1),
	Port_Property("m_axi_mem1_WLAST", 1, hls_out, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_mem1_WID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_mem1_WUSER", 1, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_mem1_ARVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_mem1_ARREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_mem1_ARADDR", 64, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_mem1_ARID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_mem1_ARLEN", 8, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_mem1_ARSIZE", 3, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_mem1_ARBURST", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_mem1_ARLOCK", 2, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_mem1_ARCACHE", 4, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_mem1_ARPROT", 3, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_mem1_ARQOS", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_mem1_ARREGION", 4, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_mem1_ARUSER", 1, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_mem1_RVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_mem1_RREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_mem1_RDATA", 32, hls_in, 0, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_mem1_RLAST", 1, hls_in, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_mem1_RID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_mem1_RUSER", 1, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_mem1_RRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_mem1_BVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_mem1_BREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_mem1_BRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_mem1_BID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_mem1_BUSER", 1, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_mem2_AWVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_mem2_AWREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_mem2_AWADDR", 64, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_mem2_AWID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_mem2_AWLEN", 8, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_mem2_AWSIZE", 3, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_mem2_AWBURST", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_mem2_AWLOCK", 2, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_mem2_AWCACHE", 4, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_mem2_AWPROT", 3, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_mem2_AWQOS", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_mem2_AWREGION", 4, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_mem2_AWUSER", 1, hls_out, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_mem2_WVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_mem2_WREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_mem2_WDATA", 32, hls_out, 1, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_mem2_WSTRB", 4, hls_out, 1, "m_axi", "STRB", 1),
	Port_Property("m_axi_mem2_WLAST", 1, hls_out, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_mem2_WID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_mem2_WUSER", 1, hls_out, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_mem2_ARVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_mem2_ARREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_mem2_ARADDR", 64, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_mem2_ARID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_mem2_ARLEN", 8, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_mem2_ARSIZE", 3, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_mem2_ARBURST", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_mem2_ARLOCK", 2, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_mem2_ARCACHE", 4, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_mem2_ARPROT", 3, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_mem2_ARQOS", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_mem2_ARREGION", 4, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_mem2_ARUSER", 1, hls_out, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_mem2_RVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_mem2_RREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_mem2_RDATA", 32, hls_in, 1, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_mem2_RLAST", 1, hls_in, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_mem2_RID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_mem2_RUSER", 1, hls_in, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_mem2_RRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_mem2_BVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_mem2_BREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_mem2_BRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_mem2_BID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_mem2_BUSER", 1, hls_in, 1, "m_axi", "DATA", 1),
	Port_Property("s_axi_control_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_AWADDR", 7, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_ARADDR", 7, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_BRESP", 2, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "conv_via_tiling";
