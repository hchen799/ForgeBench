

================================================================
== Vitis HLS Report for 'conv_via_tiling_Pipeline_VITIS_LOOP_73_1_VITIS_LOOP_74_2_VITIS_LOOP_75_3'
================================================================
* Date:           Thu Mar 13 12:52:34 2025

* Version:        2024.1.2 (Build 5096458 on Sep  5 2024)
* Project:        project_1
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+-----------------------------------------------+
    |  Latency (cycles) |  Latency (absolute) |  Interval |                    Pipeline                   |
    |   min   |   max   |    min   |    max   | min | max |                      Type                     |
    +---------+---------+----------+----------+-----+-----+-----------------------------------------------+
    |        ?|        ?|         ?|         ?|    0|    0|  loop auto-rewind stp(delay=0 clock cycles(s))|
    +---------+---------+----------+----------+-----+-----+-----------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |                     Loop Name                     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_73_1_VITIS_LOOP_74_2_VITIS_LOOP_75_3  |        ?|        ?|        16|          1|          1|     ?|       yes|
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 17


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 17
* Pipeline : 1
  Pipeline-0 : II = 1, D = 17, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.42>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%ow = alloca i32 1" [merged_conv_top.cpp:75]   --->   Operation 19 'alloca' 'ow' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%oh = alloca i32 1" [merged_conv_top.cpp:74]   --->   Operation 20 'alloca' 'oh' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 21 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%oc = alloca i32 1" [merged_conv_top.cpp:73]   --->   Operation 22 'alloca' 'oc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%indvar_flatten33 = alloca i32 1"   --->   Operation 23 'alloca' 'indvar_flatten33' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%mem1_load1 = alloca i32 1"   --->   Operation 24 'alloca' 'mem1_load1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%bias_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %bias"   --->   Operation 25 'read' 'bias_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%cmp764_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %cmp764"   --->   Operation 26 'read' 'cmp764_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%output_r_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %output_r"   --->   Operation 27 'read' 'output_r_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%mul_ln44_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %mul_ln44"   --->   Operation 28 'read' 'mul_ln44_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%zext_ln73_1_read = read i63 @_ssdm_op_Read.ap_auto.i63, i63 %zext_ln73_1"   --->   Operation 29 'read' 'zext_ln73_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%out_h_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %out_h"   --->   Operation 30 'read' 'out_h_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%mul_ln44_1_read = read i96 @_ssdm_op_Read.ap_auto.i96, i96 %mul_ln44_1"   --->   Operation 31 'read' 'mul_ln44_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%out_w_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %out_w"   --->   Operation 32 'read' 'out_w_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln73_1_cast = zext i63 %zext_ln73_1_read"   --->   Operation 33 'zext' 'zext_ln73_1_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %mem2, void @empty_15, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_22, void @empty_16, void @empty_14, i32 16, i32 16, i32 16, i32 16, void @empty_14, void @empty_14, i32 4294967295, i32 0, i32 0"   --->   Operation 34 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %mem1, void @empty_15, i32 0, i32 0, void @empty_14, i32 0, i32 0, void @empty_20, void @empty_16, void @empty_14, i32 16, i32 16, i32 16, i32 16, void @empty_14, void @empty_14, i32 4294967295, i32 0, i32 0"   --->   Operation 35 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.42ns)   --->   "%store_ln0 = store i96 0, i96 %indvar_flatten33"   --->   Operation 36 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 37 [1/1] (0.42ns)   --->   "%store_ln73 = store i31 0, i31 %oc" [merged_conv_top.cpp:73]   --->   Operation 37 'store' 'store_ln73' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 38 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %indvar_flatten"   --->   Operation 38 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 39 [1/1] (0.42ns)   --->   "%store_ln74 = store i31 0, i31 %oh" [merged_conv_top.cpp:74]   --->   Operation 39 'store' 'store_ln74' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 40 [1/1] (0.42ns)   --->   "%store_ln75 = store i31 0, i31 %ow" [merged_conv_top.cpp:75]   --->   Operation 40 'store' 'store_ln75' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 41 [1/1] (0.42ns)   --->   "%br_ln0 = br void %for.inc"   --->   Operation 41 'br' 'br_ln0' <Predicate = true> <Delay = 0.42>

State 2 <SV = 1> <Delay = 4.94>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%first_iter_0 = phi i1 1, void %newFuncRoot, i1 0, void %new.latch.for.inc.split"   --->   Operation 42 'phi' 'first_iter_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%ow_1 = load i31 %ow" [merged_conv_top.cpp:75]   --->   Operation 43 'load' 'ow_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i64 %indvar_flatten" [merged_conv_top.cpp:74]   --->   Operation 44 'load' 'indvar_flatten_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%indvar_flatten33_load = load i96 %indvar_flatten33" [merged_conv_top.cpp:73]   --->   Operation 45 'load' 'indvar_flatten33_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %mem2"   --->   Operation 46 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %mem1"   --->   Operation 47 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%zext_ln75 = zext i31 %ow_1" [merged_conv_top.cpp:75]   --->   Operation 48 'zext' 'zext_ln75' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (1.01ns)   --->   "%icmp_ln75 = icmp_slt  i32 %zext_ln75, i32 %out_w_read" [merged_conv_top.cpp:75]   --->   Operation 49 'icmp' 'icmp_ln75' <Predicate = true> <Delay = 1.01> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (1.33ns)   --->   "%icmp_ln73 = icmp_eq  i96 %indvar_flatten33_load, i96 %mul_ln44_1_read" [merged_conv_top.cpp:73]   --->   Operation 50 'icmp' 'icmp_ln73' <Predicate = true> <Delay = 1.33> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (1.33ns)   --->   "%add_ln73_2 = add i96 %indvar_flatten33_load, i96 1" [merged_conv_top.cpp:73]   --->   Operation 51 'add' 'add_ln73_2' <Predicate = true> <Delay = 1.33> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%br_ln73 = br i1 %icmp_ln73, void %for.inc17.loopexit, void %for.end19.loopexit.exitStub" [merged_conv_top.cpp:73]   --->   Operation 52 'br' 'br_ln73' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%oh_load = load i31 %oh"   --->   Operation 53 'load' 'oh_load' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%oc_load = load i31 %oc" [merged_conv_top.cpp:73]   --->   Operation 54 'load' 'oc_load' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (1.00ns)   --->   "%add_ln73 = add i31 %oc_load, i31 1" [merged_conv_top.cpp:73]   --->   Operation 55 'add' 'add_ln73' <Predicate = (!icmp_ln73)> <Delay = 1.00> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (1.08ns)   --->   "%icmp_ln74 = icmp_eq  i64 %indvar_flatten_load, i64 %mul_ln44_read" [merged_conv_top.cpp:74]   --->   Operation 56 'icmp' 'icmp_ln74' <Predicate = (!icmp_ln73)> <Delay = 1.08> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.41ns)   --->   "%select_ln73 = select i1 %icmp_ln74, i31 0, i31 %oh_load" [merged_conv_top.cpp:73]   --->   Operation 57 'select' 'select_ln73' <Predicate = (!icmp_ln73)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node or_ln74)   --->   "%or_ln73 = or i1 %icmp_ln74, i1 %first_iter_0" [merged_conv_top.cpp:73]   --->   Operation 58 'or' 'or_ln73' <Predicate = (!icmp_ln73)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (0.41ns)   --->   "%select_ln73_1 = select i1 %icmp_ln74, i31 %add_ln73, i31 %oc_load" [merged_conv_top.cpp:73]   --->   Operation 59 'select' 'select_ln73_1' <Predicate = (!icmp_ln73)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%sext_ln74_mid2_v_v_v_v_v = bitconcatenate i41 @_ssdm_op_BitConcatenate.i41.i31.i10, i31 %select_ln73_1, i10 0" [merged_conv_top.cpp:73]   --->   Operation 60 'bitconcatenate' 'sext_ln74_mid2_v_v_v_v_v' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln73 = zext i41 %sext_ln74_mid2_v_v_v_v_v" [merged_conv_top.cpp:73]   --->   Operation 61 'zext' 'zext_ln73' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (1.08ns)   --->   "%add_ln73_1 = add i64 %zext_ln73, i64 %output_r_read" [merged_conv_top.cpp:73]   --->   Operation 62 'add' 'add_ln73_1' <Predicate = (!icmp_ln73)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%sext_ln74_mid2_v = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln73_1, i32 2, i32 63" [merged_conv_top.cpp:73]   --->   Operation 63 'partselect' 'sext_ln74_mid2_v' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (1.00ns)   --->   "%first_iter_1366 = icmp_eq  i31 %oh_load, i31 0"   --->   Operation 64 'icmp' 'first_iter_1366' <Predicate = (!icmp_ln73)> <Delay = 1.00> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node select_ln74)   --->   "%or_ln73_1 = or i1 %icmp_ln74, i1 %first_iter_1366" [merged_conv_top.cpp:73]   --->   Operation 65 'or' 'or_ln73_1' <Predicate = (!icmp_ln73)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.17ns)   --->   "%select_ln73_2 = select i1 %icmp_ln74, i1 %cmp764_read, i1 %icmp_ln75" [merged_conv_top.cpp:73]   --->   Operation 66 'select' 'select_ln73_2' <Predicate = (!icmp_ln73)> <Delay = 0.17> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 67 [1/1] (1.00ns)   --->   "%add_ln74 = add i31 %select_ln73, i31 1" [merged_conv_top.cpp:74]   --->   Operation 67 'add' 'add_ln74' <Predicate = (!icmp_ln73)> <Delay = 1.00> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node or_ln74)   --->   "%xor_ln74 = xor i1 %select_ln73_2, i1 1" [merged_conv_top.cpp:74]   --->   Operation 68 'xor' 'xor_ln74' <Predicate = (!icmp_ln73)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 69 [1/1] (0.28ns) (out node of the LUT)   --->   "%or_ln74 = or i1 %or_ln73, i1 %xor_ln74" [merged_conv_top.cpp:74]   --->   Operation 69 'or' 'or_ln74' <Predicate = (!icmp_ln73)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 70 [1/1] (1.00ns)   --->   "%first_iter_1_mid1 = icmp_eq  i31 %add_ln74, i31 0" [merged_conv_top.cpp:74]   --->   Operation 70 'icmp' 'first_iter_1_mid1' <Predicate = (!icmp_ln73)> <Delay = 1.00> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 71 [1/1] (0.28ns) (out node of the LUT)   --->   "%select_ln74 = select i1 %select_ln73_2, i1 %or_ln73_1, i1 %first_iter_1_mid1" [merged_conv_top.cpp:74]   --->   Operation 71 'select' 'select_ln74' <Predicate = (!icmp_ln73)> <Delay = 0.28> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 72 [1/1] (0.41ns)   --->   "%select_ln74_1 = select i1 %select_ln73_2, i31 %select_ln73, i31 %add_ln74" [merged_conv_top.cpp:74]   --->   Operation 72 'select' 'select_ln74_1' <Predicate = (!icmp_ln73)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "%tmp_s = bitconcatenate i33 @_ssdm_op_BitConcatenate.i33.i31.i2, i31 %select_ln73_1, i2 0" [merged_conv_top.cpp:73]   --->   Operation 73 'bitconcatenate' 'tmp_s' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "%p_cast39 = zext i33 %tmp_s" [merged_conv_top.cpp:73]   --->   Operation 74 'zext' 'p_cast39' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_2 : Operation 75 [1/1] (1.08ns)   --->   "%empty_41 = add i64 %p_cast39, i64 %bias_read" [merged_conv_top.cpp:73]   --->   Operation 75 'add' 'empty_41' <Predicate = (!icmp_ln73)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 76 [1/1] (0.00ns)   --->   "%p_cast = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %empty_41, i32 2, i32 63" [merged_conv_top.cpp:73]   --->   Operation 76 'partselect' 'p_cast' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_2 : Operation 77 [1/1] (0.00ns)   --->   "%p_cast_cast = sext i62 %p_cast" [merged_conv_top.cpp:73]   --->   Operation 77 'sext' 'p_cast_cast' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "%mem1_addr = getelementptr i32 %mem1, i64 %p_cast_cast" [merged_conv_top.cpp:73]   --->   Operation 78 'getelementptr' 'mem1_addr' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (0.00ns)   --->   "%br_ln75 = br i1 %or_ln74, void %for.inc.split, void %new.body.VITIS_LOOP_75_3" [merged_conv_top.cpp:75]   --->   Operation 79 'br' 'br_ln75' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_2 : Operation 80 [1/1] (0.00ns)   --->   "%br_ln74 = br i1 %select_ln74, void %for.first.iter.for.inc, void %for.first.iter.VITIS_LOOP_75_3" [merged_conv_top.cpp:74]   --->   Operation 80 'br' 'br_ln74' <Predicate = (!icmp_ln73 & or_ln74)> <Delay = 0.00>
ST_2 : Operation 81 [1/1] (1.00ns)   --->   "%add_ln75 = add i31 %ow_1, i31 1" [merged_conv_top.cpp:75]   --->   Operation 81 'add' 'add_ln75' <Predicate = (!icmp_ln73)> <Delay = 1.00> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node select_ln75_1)   --->   "%select_ln75 = select i1 %icmp_ln74, i31 1, i31 %add_ln75" [merged_conv_top.cpp:75]   --->   Operation 82 'select' 'select_ln75' <Predicate = (!icmp_ln73)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 83 [1/1] (0.41ns) (out node of the LUT)   --->   "%select_ln75_1 = select i1 %select_ln73_2, i31 %select_ln75, i31 1" [merged_conv_top.cpp:75]   --->   Operation 83 'select' 'select_ln75_1' <Predicate = (!icmp_ln73)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 84 [1/1] (0.00ns)   --->   "%zext_ln75_1 = zext i31 %select_ln75_1" [merged_conv_top.cpp:75]   --->   Operation 84 'zext' 'zext_ln75_1' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_2 : Operation 85 [1/1] (1.01ns)   --->   "%icmp_ln75_1 = icmp_slt  i32 %zext_ln75_1, i32 %out_w_read" [merged_conv_top.cpp:75]   --->   Operation 85 'icmp' 'icmp_ln75_1' <Predicate = (!icmp_ln73)> <Delay = 1.01> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 86 [1/1] (1.00ns)   --->   "%add_ln74_1 = add i31 %select_ln74_1, i31 1" [merged_conv_top.cpp:74]   --->   Operation 86 'add' 'add_ln74_1' <Predicate = (!icmp_ln73)> <Delay = 1.00> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 87 [1/1] (0.00ns)   --->   "%zext_ln74 = zext i31 %add_ln74_1" [merged_conv_top.cpp:74]   --->   Operation 87 'zext' 'zext_ln74' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_2 : Operation 88 [1/1] (1.01ns)   --->   "%icmp_ln74_1 = icmp_slt  i32 %zext_ln74, i32 %out_h_read" [merged_conv_top.cpp:74]   --->   Operation 88 'icmp' 'icmp_ln74_1' <Predicate = (!icmp_ln73)> <Delay = 1.01> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 89 [1/1] (0.00ns)   --->   "%br_ln75 = br i1 %icmp_ln75_1, void %last.iter.for.inc.split, void %new.latch.for.inc.split" [merged_conv_top.cpp:75]   --->   Operation 89 'br' 'br_ln75' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_2 : Operation 90 [1/1] (0.00ns)   --->   "%br_ln75 = br i1 %icmp_ln74_1, void %last.iter.for.inc14.loopexit, void %new.latch.for.inc14.loopexit" [merged_conv_top.cpp:75]   --->   Operation 90 'br' 'br_ln75' <Predicate = (!icmp_ln73 & !icmp_ln75_1)> <Delay = 0.00>
ST_2 : Operation 91 [1/1] (0.00ns)   --->   "%br_ln75 = br void %new.latch.for.inc.split" [merged_conv_top.cpp:75]   --->   Operation 91 'br' 'br_ln75' <Predicate = (!icmp_ln73 & !icmp_ln75_1)> <Delay = 0.00>
ST_2 : Operation 92 [1/1] (1.08ns)   --->   "%add_ln74_2 = add i64 %indvar_flatten_load, i64 1" [merged_conv_top.cpp:74]   --->   Operation 92 'add' 'add_ln74_2' <Predicate = (!icmp_ln73)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 93 [1/1] (0.42ns)   --->   "%select_ln74_2 = select i1 %icmp_ln74, i64 1, i64 %add_ln74_2" [merged_conv_top.cpp:74]   --->   Operation 93 'select' 'select_ln74_2' <Predicate = (!icmp_ln73)> <Delay = 0.42> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 94 [1/1] (0.42ns)   --->   "%store_ln73 = store i96 %add_ln73_2, i96 %indvar_flatten33" [merged_conv_top.cpp:73]   --->   Operation 94 'store' 'store_ln73' <Predicate = (!icmp_ln73)> <Delay = 0.42>
ST_2 : Operation 95 [1/1] (0.42ns)   --->   "%store_ln73 = store i31 %select_ln73_1, i31 %oc" [merged_conv_top.cpp:73]   --->   Operation 95 'store' 'store_ln73' <Predicate = (!icmp_ln73)> <Delay = 0.42>
ST_2 : Operation 96 [1/1] (0.42ns)   --->   "%store_ln74 = store i64 %select_ln74_2, i64 %indvar_flatten" [merged_conv_top.cpp:74]   --->   Operation 96 'store' 'store_ln74' <Predicate = (!icmp_ln73)> <Delay = 0.42>
ST_2 : Operation 97 [1/1] (0.42ns)   --->   "%store_ln74 = store i31 %select_ln74_1, i31 %oh" [merged_conv_top.cpp:74]   --->   Operation 97 'store' 'store_ln74' <Predicate = (!icmp_ln73)> <Delay = 0.42>
ST_2 : Operation 98 [1/1] (0.42ns)   --->   "%store_ln75 = store i31 %select_ln75_1, i31 %ow" [merged_conv_top.cpp:75]   --->   Operation 98 'store' 'store_ln75' <Predicate = (!icmp_ln73)> <Delay = 0.42>
ST_2 : Operation 99 [1/1] (0.00ns)   --->   "%br_ln75 = br void %for.inc" [merged_conv_top.cpp:75]   --->   Operation 99 'br' 'br_ln75' <Predicate = (!icmp_ln73)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 100 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_73_1_VITIS_LOOP_74_2_VITIS_LOOP_75_3_str"   --->   Operation 100 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 101 [1/1] (0.00ns)   --->   "%sext_ln73 = sext i62 %sext_ln74_mid2_v" [merged_conv_top.cpp:73]   --->   Operation 101 'sext' 'sext_ln73' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 102 [1/1] (0.00ns)   --->   "%mem2_addr = getelementptr i32 %mem2, i64 %sext_ln73" [merged_conv_top.cpp:74]   --->   Operation 102 'getelementptr' 'mem2_addr' <Predicate = (or_ln74 & select_ln74)> <Delay = 0.00>
ST_3 : Operation 103 [1/1] (7.30ns)   --->   "%empty_40 = writereq i1 @_ssdm_op_WriteReq.m_axi.p1i32, i32 %mem2_addr, i64 %zext_ln73_1_cast" [merged_conv_top.cpp:74]   --->   Operation 103 'writereq' 'empty_40' <Predicate = (or_ln74 & select_ln74)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 104 [1/1] (0.00ns)   --->   "%br_ln74 = br void %for.first.iter.for.inc" [merged_conv_top.cpp:74]   --->   Operation 104 'br' 'br_ln74' <Predicate = (or_ln74 & select_ln74)> <Delay = 0.00>
ST_3 : Operation 105 [8/8] (7.30ns)   --->   "%mem1_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %mem1_addr, i64 1" [merged_conv_top.cpp:73]   --->   Operation 105 'readreq' 'mem1_load_req' <Predicate = (or_ln74)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 106 [1/1] (0.00ns)   --->   "%mem2_addr_1 = getelementptr i32 %mem2, i64 %sext_ln73" [merged_conv_top.cpp:74]   --->   Operation 106 'getelementptr' 'mem2_addr_1' <Predicate = true> <Delay = 0.00>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 107 [7/8] (7.30ns)   --->   "%mem1_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %mem1_addr, i64 1" [merged_conv_top.cpp:73]   --->   Operation 107 'readreq' 'mem1_load_req' <Predicate = (or_ln74)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 108 [6/8] (7.30ns)   --->   "%mem1_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %mem1_addr, i64 1" [merged_conv_top.cpp:73]   --->   Operation 108 'readreq' 'mem1_load_req' <Predicate = (or_ln74)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 109 [5/8] (7.30ns)   --->   "%mem1_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %mem1_addr, i64 1" [merged_conv_top.cpp:73]   --->   Operation 109 'readreq' 'mem1_load_req' <Predicate = (or_ln74)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 110 [4/8] (7.30ns)   --->   "%mem1_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %mem1_addr, i64 1" [merged_conv_top.cpp:73]   --->   Operation 110 'readreq' 'mem1_load_req' <Predicate = (or_ln74)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 111 [3/8] (7.30ns)   --->   "%mem1_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %mem1_addr, i64 1" [merged_conv_top.cpp:73]   --->   Operation 111 'readreq' 'mem1_load_req' <Predicate = (or_ln74)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 112 [2/8] (7.30ns)   --->   "%mem1_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %mem1_addr, i64 1" [merged_conv_top.cpp:73]   --->   Operation 112 'readreq' 'mem1_load_req' <Predicate = (or_ln74)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 7.30>
ST_10 : Operation 113 [1/8] (7.30ns)   --->   "%mem1_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %mem1_addr, i64 1" [merged_conv_top.cpp:73]   --->   Operation 113 'readreq' 'mem1_load_req' <Predicate = (or_ln74)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 7.30>
ST_11 : Operation 114 [1/1] (7.30ns)   --->   "%mem1_addr_read = read i32 @_ssdm_op_Read.m_axi.i32P1A, i32 %mem1_addr" [merged_conv_top.cpp:73]   --->   Operation 114 'read' 'mem1_addr_read' <Predicate = (or_ln74)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 115 [1/1] (0.00ns)   --->   "%store_ln73 = store i32 %mem1_addr_read, i32 %mem1_load1" [merged_conv_top.cpp:73]   --->   Operation 115 'store' 'store_ln73' <Predicate = (or_ln74)> <Delay = 0.00>
ST_11 : Operation 116 [1/1] (0.00ns)   --->   "%br_ln75 = br void %for.inc.split" [merged_conv_top.cpp:75]   --->   Operation 116 'br' 'br_ln75' <Predicate = (or_ln74)> <Delay = 0.00>

State 12 <SV = 11> <Delay = 7.30>
ST_12 : Operation 117 [1/1] (0.00ns)   --->   "%mem1_load = load i32 %mem1_load1"   --->   Operation 117 'load' 'mem1_load' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 118 [1/1] (0.00ns)   --->   "%specpipeline_ln75 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_14" [merged_conv_top.cpp:75]   --->   Operation 118 'specpipeline' 'specpipeline_ln75' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 119 [1/1] (7.30ns)   --->   "%write_ln76 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %mem2_addr_1, i32 %mem1_load, i4 15" [merged_conv_top.cpp:76]   --->   Operation 119 'write' 'write_ln76' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 7.30>
ST_13 : Operation 120 [5/5] (7.30ns)   --->   "%empty = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %mem2_addr_1" [merged_conv_top.cpp:73]   --->   Operation 120 'writeresp' 'empty' <Predicate = (!icmp_ln75_1 & !icmp_ln74_1)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 7.30>
ST_14 : Operation 121 [4/5] (7.30ns)   --->   "%empty = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %mem2_addr_1" [merged_conv_top.cpp:73]   --->   Operation 121 'writeresp' 'empty' <Predicate = (!icmp_ln75_1 & !icmp_ln74_1)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 7.30>
ST_15 : Operation 122 [3/5] (7.30ns)   --->   "%empty = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %mem2_addr_1" [merged_conv_top.cpp:73]   --->   Operation 122 'writeresp' 'empty' <Predicate = (!icmp_ln75_1 & !icmp_ln74_1)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 7.30>
ST_16 : Operation 123 [2/5] (7.30ns)   --->   "%empty = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %mem2_addr_1" [merged_conv_top.cpp:73]   --->   Operation 123 'writeresp' 'empty' <Predicate = (!icmp_ln75_1 & !icmp_ln74_1)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 126 [1/1] (0.42ns)   --->   "%ret_ln0 = ret"   --->   Operation 126 'ret' 'ret_ln0' <Predicate = (icmp_ln73)> <Delay = 0.42>

State 17 <SV = 16> <Delay = 7.30>
ST_17 : Operation 124 [1/5] (7.30ns)   --->   "%empty = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %mem2_addr_1" [merged_conv_top.cpp:73]   --->   Operation 124 'writeresp' 'empty' <Predicate = (!icmp_ln75_1 & !icmp_ln74_1)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 125 [1/1] (0.00ns)   --->   "%br_ln75 = br void %new.latch.for.inc14.loopexit" [merged_conv_top.cpp:75]   --->   Operation 125 'br' 'br_ln75' <Predicate = (!icmp_ln75_1 & !icmp_ln74_1)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 0.427ns
The critical path consists of the following:
	'alloca' operation 96 bit ('indvar_flatten33') [15]  (0.000 ns)
	'store' operation 0 bit ('store_ln0') of constant 0 on local variable 'indvar_flatten33' [28]  (0.427 ns)

 <State 2>: 4.949ns
The critical path consists of the following:
	'load' operation 64 bit ('indvar_flatten_load', merged_conv_top.cpp:74) on local variable 'indvar_flatten' [37]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln74', merged_conv_top.cpp:74) [51]  (1.085 ns)
	'select' operation 31 bit ('select_ln73', merged_conv_top.cpp:73) [52]  (0.418 ns)
	'add' operation 31 bit ('add_ln74', merged_conv_top.cpp:74) [63]  (1.006 ns)
	'select' operation 31 bit ('select_ln74_1', merged_conv_top.cpp:74) [68]  (0.418 ns)
	'add' operation 31 bit ('add_ln74_1', merged_conv_top.cpp:74) [97]  (1.006 ns)
	'icmp' operation 1 bit ('icmp_ln74_1', merged_conv_top.cpp:74) [99]  (1.016 ns)

 <State 3>: 7.300ns
The critical path consists of the following:
	bus request operation ('mem1_load_req', merged_conv_top.cpp:73) on port 'mem1' (merged_conv_top.cpp:73) [83]  (7.300 ns)

 <State 4>: 7.300ns
The critical path consists of the following:
	bus request operation ('mem1_load_req', merged_conv_top.cpp:73) on port 'mem1' (merged_conv_top.cpp:73) [83]  (7.300 ns)

 <State 5>: 7.300ns
The critical path consists of the following:
	bus request operation ('mem1_load_req', merged_conv_top.cpp:73) on port 'mem1' (merged_conv_top.cpp:73) [83]  (7.300 ns)

 <State 6>: 7.300ns
The critical path consists of the following:
	bus request operation ('mem1_load_req', merged_conv_top.cpp:73) on port 'mem1' (merged_conv_top.cpp:73) [83]  (7.300 ns)

 <State 7>: 7.300ns
The critical path consists of the following:
	bus request operation ('mem1_load_req', merged_conv_top.cpp:73) on port 'mem1' (merged_conv_top.cpp:73) [83]  (7.300 ns)

 <State 8>: 7.300ns
The critical path consists of the following:
	bus request operation ('mem1_load_req', merged_conv_top.cpp:73) on port 'mem1' (merged_conv_top.cpp:73) [83]  (7.300 ns)

 <State 9>: 7.300ns
The critical path consists of the following:
	bus request operation ('mem1_load_req', merged_conv_top.cpp:73) on port 'mem1' (merged_conv_top.cpp:73) [83]  (7.300 ns)

 <State 10>: 7.300ns
The critical path consists of the following:
	bus request operation ('mem1_load_req', merged_conv_top.cpp:73) on port 'mem1' (merged_conv_top.cpp:73) [83]  (7.300 ns)

 <State 11>: 7.300ns
The critical path consists of the following:
	bus read operation ('mem1_addr_read', merged_conv_top.cpp:73) on port 'mem1' (merged_conv_top.cpp:73) [84]  (7.300 ns)

 <State 12>: 7.300ns
The critical path consists of the following:
	'load' operation 32 bit ('mem1_load') on local variable 'mem1_load1' [88]  (0.000 ns)
	bus write operation ('write_ln76', merged_conv_top.cpp:76) on port 'mem2' (merged_conv_top.cpp:76) [91]  (7.300 ns)

 <State 13>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty', merged_conv_top.cpp:73) on port 'mem2' (merged_conv_top.cpp:73) [104]  (7.300 ns)

 <State 14>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty', merged_conv_top.cpp:73) on port 'mem2' (merged_conv_top.cpp:73) [104]  (7.300 ns)

 <State 15>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty', merged_conv_top.cpp:73) on port 'mem2' (merged_conv_top.cpp:73) [104]  (7.300 ns)

 <State 16>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty', merged_conv_top.cpp:73) on port 'mem2' (merged_conv_top.cpp:73) [104]  (7.300 ns)

 <State 17>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty', merged_conv_top.cpp:73) on port 'mem2' (merged_conv_top.cpp:73) [104]  (7.300 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
