// ==============================================================
// Generated by Vitis HLS v2024.1.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module conv_via_tiling_conv_via_tiling_Pipeline_VITIS_LOOP_190_27_VITIS_LOOP_191_28_VITIS_LOOP_192_29 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_mem2_AWVALID,
        m_axi_mem2_AWREADY,
        m_axi_mem2_AWADDR,
        m_axi_mem2_AWID,
        m_axi_mem2_AWLEN,
        m_axi_mem2_AWSIZE,
        m_axi_mem2_AWBURST,
        m_axi_mem2_AWLOCK,
        m_axi_mem2_AWCACHE,
        m_axi_mem2_AWPROT,
        m_axi_mem2_AWQOS,
        m_axi_mem2_AWREGION,
        m_axi_mem2_AWUSER,
        m_axi_mem2_WVALID,
        m_axi_mem2_WREADY,
        m_axi_mem2_WDATA,
        m_axi_mem2_WSTRB,
        m_axi_mem2_WLAST,
        m_axi_mem2_WID,
        m_axi_mem2_WUSER,
        m_axi_mem2_ARVALID,
        m_axi_mem2_ARREADY,
        m_axi_mem2_ARADDR,
        m_axi_mem2_ARID,
        m_axi_mem2_ARLEN,
        m_axi_mem2_ARSIZE,
        m_axi_mem2_ARBURST,
        m_axi_mem2_ARLOCK,
        m_axi_mem2_ARCACHE,
        m_axi_mem2_ARPROT,
        m_axi_mem2_ARQOS,
        m_axi_mem2_ARREGION,
        m_axi_mem2_ARUSER,
        m_axi_mem2_RVALID,
        m_axi_mem2_RREADY,
        m_axi_mem2_RDATA,
        m_axi_mem2_RLAST,
        m_axi_mem2_RID,
        m_axi_mem2_RFIFONUM,
        m_axi_mem2_RUSER,
        m_axi_mem2_RRESP,
        m_axi_mem2_BVALID,
        m_axi_mem2_BREADY,
        m_axi_mem2_BRESP,
        m_axi_mem2_BID,
        m_axi_mem2_BUSER,
        zext_ln102,
        mul_ln88_2,
        sext_ln73,
        zext_ln89_2,
        output_r,
        xor_ln89,
        mul_ln190,
        localOut_address0,
        localOut_ce0,
        localOut_q0,
        zext_ln100,
        mul_ln89_3,
        tmp_cast_mid1285,
        select_ln89
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_mem2_AWVALID;
input   m_axi_mem2_AWREADY;
output  [63:0] m_axi_mem2_AWADDR;
output  [0:0] m_axi_mem2_AWID;
output  [31:0] m_axi_mem2_AWLEN;
output  [2:0] m_axi_mem2_AWSIZE;
output  [1:0] m_axi_mem2_AWBURST;
output  [1:0] m_axi_mem2_AWLOCK;
output  [3:0] m_axi_mem2_AWCACHE;
output  [2:0] m_axi_mem2_AWPROT;
output  [3:0] m_axi_mem2_AWQOS;
output  [3:0] m_axi_mem2_AWREGION;
output  [0:0] m_axi_mem2_AWUSER;
output   m_axi_mem2_WVALID;
input   m_axi_mem2_WREADY;
output  [31:0] m_axi_mem2_WDATA;
output  [3:0] m_axi_mem2_WSTRB;
output   m_axi_mem2_WLAST;
output  [0:0] m_axi_mem2_WID;
output  [0:0] m_axi_mem2_WUSER;
output   m_axi_mem2_ARVALID;
input   m_axi_mem2_ARREADY;
output  [63:0] m_axi_mem2_ARADDR;
output  [0:0] m_axi_mem2_ARID;
output  [31:0] m_axi_mem2_ARLEN;
output  [2:0] m_axi_mem2_ARSIZE;
output  [1:0] m_axi_mem2_ARBURST;
output  [1:0] m_axi_mem2_ARLOCK;
output  [3:0] m_axi_mem2_ARCACHE;
output  [2:0] m_axi_mem2_ARPROT;
output  [3:0] m_axi_mem2_ARQOS;
output  [3:0] m_axi_mem2_ARREGION;
output  [0:0] m_axi_mem2_ARUSER;
input   m_axi_mem2_RVALID;
output   m_axi_mem2_RREADY;
input  [31:0] m_axi_mem2_RDATA;
input   m_axi_mem2_RLAST;
input  [0:0] m_axi_mem2_RID;
input  [8:0] m_axi_mem2_RFIFONUM;
input  [0:0] m_axi_mem2_RUSER;
input  [1:0] m_axi_mem2_RRESP;
input   m_axi_mem2_BVALID;
output   m_axi_mem2_BREADY;
input  [1:0] m_axi_mem2_BRESP;
input  [0:0] m_axi_mem2_BID;
input  [0:0] m_axi_mem2_BUSER;
input  [31:0] zext_ln102;
input  [30:0] mul_ln88_2;
input  [31:0] sext_ln73;
input  [31:0] zext_ln89_2;
input  [63:0] output_r;
input  [31:0] xor_ln89;
input  [95:0] mul_ln190;
output  [11:0] localOut_address0;
output   localOut_ce0;
input  [31:0] localOut_q0;
input  [31:0] zext_ln100;
input  [63:0] mul_ln89_3;
input  [30:0] tmp_cast_mid1285;
input  [31:0] select_ln89;

reg ap_idle;
reg m_axi_mem2_AWVALID;
reg m_axi_mem2_WVALID;
reg m_axi_mem2_BREADY;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_idle_pp0;
reg   [0:0] first_iter_17_reg_826;
reg   [0:0] first_iter_17_reg_826_pp0_iter2_reg;
reg    ap_block_state4_io;
reg   [0:0] icmp_ln192_2_reg_830;
reg   [0:0] icmp_ln192_2_reg_830_pp0_iter8_reg;
reg    ap_block_state10_pp0_stage0_iter9;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln190_fu_295_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    mem2_blk_n_B;
wire    ap_block_pp0_stage0;
reg    mem2_blk_n_W;
reg    mem2_blk_n_AW;
reg    ap_block_pp0_stage0_11001;
wire   [61:0] tmp_cast_mid1285_cast_fu_229_p1;
reg   [61:0] tmp_cast_mid1285_cast_reg_764;
wire   [63:0] zext_ln100_cast_fu_233_p1;
reg   [63:0] zext_ln100_cast_reg_769;
wire   [61:0] zext_ln89_2_cast_fu_237_p1;
reg   [61:0] zext_ln89_2_cast_reg_774;
wire  signed [61:0] sext_ln73_cast_fu_241_p1;
reg  signed [61:0] sext_ln73_cast_reg_779;
wire   [32:0] zext_ln102_cast_fu_245_p1;
reg   [32:0] zext_ln102_cast_reg_784;
reg   [2:0] r_1_reg_790;
reg   [0:0] icmp_ln190_reg_795;
wire   [0:0] icmp_ln191_fu_306_p2;
reg   [0:0] icmp_ln191_reg_799;
wire   [0:0] select_ln190_3_fu_332_p3;
reg   [0:0] select_ln190_3_reg_806;
wire   [2:0] add_ln191_fu_340_p2;
reg   [2:0] add_ln191_reg_811;
wire   [2:0] select_ln191_fu_346_p3;
reg   [2:0] select_ln191_reg_816;
wire   [2:0] select_ln191_2_fu_354_p3;
reg   [2:0] select_ln191_2_reg_821;
wire   [0:0] first_iter_17_fu_362_p2;
wire   [0:0] icmp_ln192_2_fu_378_p2;
reg   [0:0] icmp_ln192_2_reg_830_pp0_iter2_reg;
reg   [0:0] icmp_ln192_2_reg_830_pp0_iter3_reg;
reg   [0:0] icmp_ln192_2_reg_830_pp0_iter4_reg;
reg   [0:0] icmp_ln192_2_reg_830_pp0_iter5_reg;
reg   [0:0] icmp_ln192_2_reg_830_pp0_iter6_reg;
reg   [0:0] icmp_ln192_2_reg_830_pp0_iter7_reg;
wire   [61:0] select_ln191_1_fu_606_p3;
reg   [61:0] select_ln191_1_reg_834;
reg   [31:0] localOut_load_reg_844;
reg    ap_condition_exit_pp0_iter2_stage0;
wire   [63:0] zext_ln194_2_fu_665_p1;
wire  signed [63:0] sext_ln191_fu_675_p1;
reg    ap_block_pp0_stage0_01001;
reg   [2:0] c_fu_102;
wire   [2:0] add_ln192_fu_368_p2;
wire    ap_loop_init;
reg   [2:0] r_fu_106;
reg   [63:0] indvar_flatten259_fu_110;
wire   [63:0] select_ln191_3_fu_389_p3;
reg   [30:0] oc2_fu_114;
wire   [30:0] select_ln190_4_fu_530_p3;
reg   [95:0] indvar_flatten310_fu_118;
wire   [95:0] add_ln190_1_fu_300_p2;
reg    localOut_ce0_local;
reg   [30:0] grp_fu_220_p0;
wire   [61:0] tmp_cast_fu_449_p1;
wire   [61:0] tmp_cast_mid1_fu_545_p1;
wire  signed [31:0] grp_fu_220_p1;
wire   [61:0] grp_fu_220_p2;
wire   [31:0] zext_ln192_fu_286_p1;
wire   [0:0] icmp_ln192_1_fu_327_p2;
wire   [0:0] icmp_ln192_fu_290_p2;
wire   [2:0] select_ln190_fu_311_p3;
wire   [2:0] select_ln190_1_fu_319_p3;
wire   [31:0] zext_ln192_1_fu_374_p1;
wire   [63:0] add_ln191_1_fu_383_p2;
wire   [32:0] oc2_1_cast18_fu_420_p1;
wire   [32:0] empty_fu_424_p2;
wire   [42:0] tmp_s_fu_429_p3;
wire   [30:0] zext_ln191_1_fu_441_p1;
wire   [30:0] tmp_fu_444_p2;
wire   [61:0] grp_fu_224_p2;
wire   [63:0] tmp_36_fu_454_p3;
wire   [63:0] tmp10_fu_462_p2;
wire   [63:0] zext_ln191_fu_437_p1;
wire   [30:0] add_ln190_fu_473_p2;
wire   [32:0] oc2_1_cast18_mid1_fu_479_p1;
wire   [32:0] p_mid1273_fu_483_p2;
wire   [42:0] p_mid_fu_488_p3;
wire   [42:0] select_ln190_2_fu_500_p3;
wire   [63:0] p_mid1_fu_511_p3;
wire   [63:0] tmp10_mid1295_fu_519_p2;
wire   [63:0] zext_ln191_2_fu_496_p1;
wire   [30:0] zext_ln191_3_fu_537_p1;
wire   [30:0] tmp_mid1_fu_540_p2;
wire   [63:0] p_mid2_fu_550_p3;
wire   [63:0] tmp10_mid1_fu_558_p2;
wire   [63:0] zext_ln190_fu_507_p1;
wire   [63:0] p_mid1297_fu_524_p2;
wire   [63:0] empty_46_fu_467_p2;
wire   [61:0] tmp_37_fu_569_p4;
wire   [61:0] tmp_38_fu_579_p4;
wire   [63:0] p_mid1257_fu_563_p2;
wire   [61:0] select_ln190_5_fu_589_p3;
wire   [61:0] tmp_39_fu_596_p4;
wire   [8:0] trunc_ln194_1_fu_617_p1;
wire   [11:0] p_shl_fu_621_p3;
wire   [11:0] trunc_ln194_fu_613_p1;
wire   [11:0] sub_ln194_fu_629_p2;
wire   [11:0] zext_ln194_fu_635_p1;
wire   [11:0] add_ln194_fu_638_p2;
wire   [11:0] shl_ln194_fu_644_p2;
wire   [11:0] sub_ln194_1_fu_650_p2;
wire   [11:0] zext_ln194_1_fu_656_p1;
wire   [11:0] add_ln194_1_fu_659_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
reg    ap_condition_348;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 c_fu_102 = 3'd0;
#0 r_fu_106 = 3'd0;
#0 indvar_flatten259_fu_110 = 64'd0;
#0 oc2_fu_114 = 31'd0;
#0 indvar_flatten310_fu_118 = 96'd0;
#0 ap_done_reg = 1'b0;
end

conv_via_tiling_mul_31ns_32s_62_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 62 ))
mul_31ns_32s_62_1_1_U177(
    .din0(grp_fu_220_p0),
    .din1(grp_fu_220_p1),
    .dout(grp_fu_220_p2)
);

conv_via_tiling_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter2_stage0)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            c_fu_102 <= 3'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln190_fu_295_p2 == 1'd0))) begin
            c_fu_102 <= add_ln192_fu_368_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten259_fu_110 <= 64'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln190_fu_295_p2 == 1'd0))) begin
            indvar_flatten259_fu_110 <= select_ln191_3_fu_389_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten310_fu_118 <= 96'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln190_fu_295_p2 == 1'd0))) begin
            indvar_flatten310_fu_118 <= add_ln190_1_fu_300_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            oc2_fu_114 <= 31'd0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln190_reg_795 == 1'd0))) begin
            oc2_fu_114 <= select_ln190_4_fu_530_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            r_fu_106 <= 3'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln190_fu_295_p2 == 1'd0))) begin
            r_fu_106 <= select_ln191_2_fu_354_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln191_reg_811 <= add_ln191_fu_340_p2;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        first_iter_17_reg_826 <= first_iter_17_fu_362_p2;
        icmp_ln190_reg_795 <= icmp_ln190_fu_295_p2;
        icmp_ln191_reg_799 <= icmp_ln191_fu_306_p2;
        icmp_ln192_2_reg_830 <= icmp_ln192_2_fu_378_p2;
        r_1_reg_790 <= r_fu_106;
        select_ln190_3_reg_806 <= select_ln190_3_fu_332_p3;
        select_ln191_2_reg_821 <= select_ln191_2_fu_354_p3;
        select_ln191_reg_816 <= select_ln191_fu_346_p3;
        sext_ln73_cast_reg_779 <= sext_ln73_cast_fu_241_p1;
        tmp_cast_mid1285_cast_reg_764[30 : 0] <= tmp_cast_mid1285_cast_fu_229_p1[30 : 0];
        zext_ln100_cast_reg_769[31 : 0] <= zext_ln100_cast_fu_233_p1[31 : 0];
        zext_ln102_cast_reg_784[31 : 0] <= zext_ln102_cast_fu_245_p1[31 : 0];
        zext_ln89_2_cast_reg_774[31 : 0] <= zext_ln89_2_cast_fu_237_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        first_iter_17_reg_826_pp0_iter2_reg <= first_iter_17_reg_826;
        icmp_ln192_2_reg_830_pp0_iter2_reg <= icmp_ln192_2_reg_830;
        icmp_ln192_2_reg_830_pp0_iter3_reg <= icmp_ln192_2_reg_830_pp0_iter2_reg;
        icmp_ln192_2_reg_830_pp0_iter4_reg <= icmp_ln192_2_reg_830_pp0_iter3_reg;
        icmp_ln192_2_reg_830_pp0_iter5_reg <= icmp_ln192_2_reg_830_pp0_iter4_reg;
        icmp_ln192_2_reg_830_pp0_iter6_reg <= icmp_ln192_2_reg_830_pp0_iter5_reg;
        icmp_ln192_2_reg_830_pp0_iter7_reg <= icmp_ln192_2_reg_830_pp0_iter6_reg;
        icmp_ln192_2_reg_830_pp0_iter8_reg <= icmp_ln192_2_reg_830_pp0_iter7_reg;
        localOut_load_reg_844 <= localOut_q0;
        select_ln191_1_reg_834 <= select_ln191_1_fu_606_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln190_fu_295_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln190_reg_795 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        if (((select_ln190_3_reg_806 == 1'd0) & (icmp_ln190_reg_795 == 1'd0))) begin
            grp_fu_220_p0 = tmp_cast_mid1_fu_545_p1;
        end else if ((1'b1 == ap_condition_348)) begin
            grp_fu_220_p0 = tmp_cast_mid1285_cast_reg_764;
        end else if (((select_ln190_3_reg_806 == 1'd1) & (icmp_ln191_reg_799 == 1'd0))) begin
            grp_fu_220_p0 = tmp_cast_fu_449_p1;
        end else begin
            grp_fu_220_p0 = 'bx;
        end
    end else begin
        grp_fu_220_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localOut_ce0_local = 1'b1;
    end else begin
        localOut_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (first_iter_17_reg_826_pp0_iter2_reg == 1'd1))) begin
        m_axi_mem2_AWVALID = 1'b1;
    end else begin
        m_axi_mem2_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln192_2_reg_830_pp0_iter8_reg == 1'd0))) begin
        m_axi_mem2_BREADY = 1'b1;
    end else begin
        m_axi_mem2_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_mem2_WVALID = 1'b1;
    end else begin
        m_axi_mem2_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (first_iter_17_reg_826_pp0_iter2_reg == 1'd1))) begin
        mem2_blk_n_AW = m_axi_mem2_AWREADY;
    end else begin
        mem2_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln192_2_reg_830_pp0_iter8_reg == 1'd0))) begin
        mem2_blk_n_B = m_axi_mem2_BVALID;
    end else begin
        mem2_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        mem2_blk_n_W = m_axi_mem2_WREADY;
    end else begin
        mem2_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln190_1_fu_300_p2 = (indvar_flatten310_fu_118 + 96'd1);

assign add_ln190_fu_473_p2 = (oc2_fu_114 + 31'd1);

assign add_ln191_1_fu_383_p2 = (indvar_flatten259_fu_110 + 64'd1);

assign add_ln191_fu_340_p2 = (select_ln190_fu_311_p3 + 3'd1);

assign add_ln192_fu_368_p2 = (select_ln191_fu_346_p3 + 3'd1);

assign add_ln194_1_fu_659_p2 = (sub_ln194_1_fu_650_p2 + zext_ln194_1_fu_656_p1);

assign add_ln194_fu_638_p2 = (sub_ln194_fu_629_p2 + zext_ln194_fu_635_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_block_state10_pp0_stage0_iter9));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_block_state10_pp0_stage0_iter9)) | ((m_axi_mem2_WREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_block_state10_pp0_stage0_iter9)) | ((m_axi_mem2_WREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_io)));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter9 = ((icmp_ln192_2_reg_830_pp0_iter8_reg == 1'd0) & (m_axi_mem2_BVALID == 1'b0));
end

always @ (*) begin
    ap_block_state4_io = ((m_axi_mem2_AWREADY == 1'b0) & (first_iter_17_reg_826_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_condition_348 = ((select_ln190_3_reg_806 == 1'd1) & (icmp_ln191_reg_799 == 1'd1) & (icmp_ln190_reg_795 == 1'd0));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_ready = ap_ready_sig;

assign empty_46_fu_467_p2 = (tmp10_fu_462_p2 + zext_ln191_fu_437_p1);

assign empty_fu_424_p2 = (oc2_1_cast18_fu_420_p1 + zext_ln102_cast_reg_784);

assign first_iter_17_fu_362_p2 = ((select_ln191_fu_346_p3 == 3'd0) ? 1'b1 : 1'b0);

assign grp_fu_220_p1 = sext_ln73_cast_reg_779;

assign grp_fu_224_p2 = (grp_fu_220_p2 + zext_ln89_2_cast_reg_774);

assign icmp_ln190_fu_295_p2 = ((indvar_flatten310_fu_118 == mul_ln190) ? 1'b1 : 1'b0);

assign icmp_ln191_fu_306_p2 = ((indvar_flatten259_fu_110 == mul_ln89_3) ? 1'b1 : 1'b0);

assign icmp_ln192_1_fu_327_p2 = (($signed(select_ln89) < $signed(32'd4294967295)) ? 1'b1 : 1'b0);

assign icmp_ln192_2_fu_378_p2 = (($signed(zext_ln192_1_fu_374_p1) < $signed(xor_ln89)) ? 1'b1 : 1'b0);

assign icmp_ln192_fu_290_p2 = (($signed(zext_ln192_fu_286_p1) < $signed(xor_ln89)) ? 1'b1 : 1'b0);

assign localOut_address0 = zext_ln194_2_fu_665_p1;

assign localOut_ce0 = localOut_ce0_local;

assign m_axi_mem2_ARADDR = 64'd0;

assign m_axi_mem2_ARBURST = 2'd0;

assign m_axi_mem2_ARCACHE = 4'd0;

assign m_axi_mem2_ARID = 1'd0;

assign m_axi_mem2_ARLEN = 32'd0;

assign m_axi_mem2_ARLOCK = 2'd0;

assign m_axi_mem2_ARPROT = 3'd0;

assign m_axi_mem2_ARQOS = 4'd0;

assign m_axi_mem2_ARREGION = 4'd0;

assign m_axi_mem2_ARSIZE = 3'd0;

assign m_axi_mem2_ARUSER = 1'd0;

assign m_axi_mem2_ARVALID = 1'b0;

assign m_axi_mem2_AWADDR = sext_ln191_fu_675_p1;

assign m_axi_mem2_AWBURST = 2'd0;

assign m_axi_mem2_AWCACHE = 4'd0;

assign m_axi_mem2_AWID = 1'd0;

assign m_axi_mem2_AWLEN = zext_ln100_cast_reg_769;

assign m_axi_mem2_AWLOCK = 2'd0;

assign m_axi_mem2_AWPROT = 3'd0;

assign m_axi_mem2_AWQOS = 4'd0;

assign m_axi_mem2_AWREGION = 4'd0;

assign m_axi_mem2_AWSIZE = 3'd0;

assign m_axi_mem2_AWUSER = 1'd0;

assign m_axi_mem2_RREADY = 1'b0;

assign m_axi_mem2_WDATA = localOut_load_reg_844;

assign m_axi_mem2_WID = 1'd0;

assign m_axi_mem2_WLAST = 1'b0;

assign m_axi_mem2_WSTRB = 4'd15;

assign m_axi_mem2_WUSER = 1'd0;

assign oc2_1_cast18_fu_420_p1 = oc2_fu_114;

assign oc2_1_cast18_mid1_fu_479_p1 = add_ln190_fu_473_p2;

assign p_mid1257_fu_563_p2 = (tmp10_mid1_fu_558_p2 + zext_ln190_fu_507_p1);

assign p_mid1273_fu_483_p2 = (oc2_1_cast18_mid1_fu_479_p1 + zext_ln102_cast_reg_784);

assign p_mid1297_fu_524_p2 = (tmp10_mid1295_fu_519_p2 + zext_ln191_2_fu_496_p1);

assign p_mid1_fu_511_p3 = {{grp_fu_224_p2}, {2'd0}};

assign p_mid2_fu_550_p3 = {{grp_fu_224_p2}, {2'd0}};

assign p_mid_fu_488_p3 = {{p_mid1273_fu_483_p2}, {10'd0}};

assign p_shl_fu_621_p3 = {{trunc_ln194_1_fu_617_p1}, {3'd0}};

assign select_ln190_1_fu_319_p3 = ((icmp_ln191_fu_306_p2[0:0] == 1'b1) ? 3'd0 : c_fu_102);

assign select_ln190_2_fu_500_p3 = ((icmp_ln191_reg_799[0:0] == 1'b1) ? p_mid_fu_488_p3 : tmp_s_fu_429_p3);

assign select_ln190_3_fu_332_p3 = ((icmp_ln191_fu_306_p2[0:0] == 1'b1) ? icmp_ln192_1_fu_327_p2 : icmp_ln192_fu_290_p2);

assign select_ln190_4_fu_530_p3 = ((icmp_ln191_reg_799[0:0] == 1'b1) ? add_ln190_fu_473_p2 : oc2_fu_114);

assign select_ln190_5_fu_589_p3 = ((icmp_ln191_reg_799[0:0] == 1'b1) ? tmp_37_fu_569_p4 : tmp_38_fu_579_p4);

assign select_ln190_fu_311_p3 = ((icmp_ln191_fu_306_p2[0:0] == 1'b1) ? 3'd0 : r_fu_106);

assign select_ln191_1_fu_606_p3 = ((select_ln190_3_reg_806[0:0] == 1'b1) ? select_ln190_5_fu_589_p3 : tmp_39_fu_596_p4);

assign select_ln191_2_fu_354_p3 = ((select_ln190_3_fu_332_p3[0:0] == 1'b1) ? select_ln190_fu_311_p3 : add_ln191_fu_340_p2);

assign select_ln191_3_fu_389_p3 = ((icmp_ln191_fu_306_p2[0:0] == 1'b1) ? 64'd1 : add_ln191_1_fu_383_p2);

assign select_ln191_fu_346_p3 = ((select_ln190_3_fu_332_p3[0:0] == 1'b1) ? select_ln190_1_fu_319_p3 : 3'd0);

assign sext_ln191_fu_675_p1 = $signed(select_ln191_1_reg_834);

assign sext_ln73_cast_fu_241_p1 = $signed(sext_ln73);

assign shl_ln194_fu_644_p2 = add_ln194_fu_638_p2 << 12'd3;

assign sub_ln194_1_fu_650_p2 = (shl_ln194_fu_644_p2 - add_ln194_fu_638_p2);

assign sub_ln194_fu_629_p2 = (p_shl_fu_621_p3 - trunc_ln194_fu_613_p1);

assign tmp10_fu_462_p2 = (tmp_36_fu_454_p3 + output_r);

assign tmp10_mid1295_fu_519_p2 = (p_mid1_fu_511_p3 + output_r);

assign tmp10_mid1_fu_558_p2 = (p_mid2_fu_550_p3 + output_r);

assign tmp_36_fu_454_p3 = {{grp_fu_224_p2}, {2'd0}};

assign tmp_37_fu_569_p4 = {{p_mid1297_fu_524_p2[63:2]}};

assign tmp_38_fu_579_p4 = {{empty_46_fu_467_p2[63:2]}};

assign tmp_39_fu_596_p4 = {{p_mid1257_fu_563_p2[63:2]}};

assign tmp_cast_fu_449_p1 = tmp_fu_444_p2;

assign tmp_cast_mid1285_cast_fu_229_p1 = tmp_cast_mid1285;

assign tmp_cast_mid1_fu_545_p1 = tmp_mid1_fu_540_p2;

assign tmp_fu_444_p2 = (zext_ln191_1_fu_441_p1 + mul_ln88_2);

assign tmp_mid1_fu_540_p2 = (zext_ln191_3_fu_537_p1 + mul_ln88_2);

assign tmp_s_fu_429_p3 = {{empty_fu_424_p2}, {10'd0}};

assign trunc_ln194_1_fu_617_p1 = select_ln190_4_fu_530_p3[8:0];

assign trunc_ln194_fu_613_p1 = select_ln190_4_fu_530_p3[11:0];

assign zext_ln100_cast_fu_233_p1 = zext_ln100;

assign zext_ln102_cast_fu_245_p1 = zext_ln102;

assign zext_ln190_fu_507_p1 = select_ln190_2_fu_500_p3;

assign zext_ln191_1_fu_441_p1 = r_1_reg_790;

assign zext_ln191_2_fu_496_p1 = p_mid_fu_488_p3;

assign zext_ln191_3_fu_537_p1 = add_ln191_reg_811;

assign zext_ln191_fu_437_p1 = tmp_s_fu_429_p3;

assign zext_ln192_1_fu_374_p1 = add_ln192_fu_368_p2;

assign zext_ln192_fu_286_p1 = c_fu_102;

assign zext_ln194_1_fu_656_p1 = select_ln191_reg_816;

assign zext_ln194_2_fu_665_p1 = add_ln194_1_fu_659_p2;

assign zext_ln194_fu_635_p1 = select_ln191_2_reg_821;

assign zext_ln89_2_cast_fu_237_p1 = zext_ln89_2;

always @ (posedge ap_clk) begin
    tmp_cast_mid1285_cast_reg_764[61:31] <= 31'b0000000000000000000000000000000;
    zext_ln100_cast_reg_769[63:32] <= 32'b00000000000000000000000000000000;
    zext_ln89_2_cast_reg_774[61:32] <= 30'b000000000000000000000000000000;
    zext_ln102_cast_reg_784[32] <= 1'b0;
end

endmodule //conv_via_tiling_conv_via_tiling_Pipeline_VITIS_LOOP_190_27_VITIS_LOOP_191_28_VITIS_LOOP_192_29
