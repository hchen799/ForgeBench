// ==============================================================
// Generated by Vitis HLS v2024.1.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module conv_via_tiling_conv_via_tiling_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_mem2_AWVALID,
        m_axi_mem2_AWREADY,
        m_axi_mem2_AWADDR,
        m_axi_mem2_AWID,
        m_axi_mem2_AWLEN,
        m_axi_mem2_AWSIZE,
        m_axi_mem2_AWBURST,
        m_axi_mem2_AWLOCK,
        m_axi_mem2_AWCACHE,
        m_axi_mem2_AWPROT,
        m_axi_mem2_AWQOS,
        m_axi_mem2_AWREGION,
        m_axi_mem2_AWUSER,
        m_axi_mem2_WVALID,
        m_axi_mem2_WREADY,
        m_axi_mem2_WDATA,
        m_axi_mem2_WSTRB,
        m_axi_mem2_WLAST,
        m_axi_mem2_WID,
        m_axi_mem2_WUSER,
        m_axi_mem2_ARVALID,
        m_axi_mem2_ARREADY,
        m_axi_mem2_ARADDR,
        m_axi_mem2_ARID,
        m_axi_mem2_ARLEN,
        m_axi_mem2_ARSIZE,
        m_axi_mem2_ARBURST,
        m_axi_mem2_ARLOCK,
        m_axi_mem2_ARCACHE,
        m_axi_mem2_ARPROT,
        m_axi_mem2_ARQOS,
        m_axi_mem2_ARREGION,
        m_axi_mem2_ARUSER,
        m_axi_mem2_RVALID,
        m_axi_mem2_RREADY,
        m_axi_mem2_RDATA,
        m_axi_mem2_RLAST,
        m_axi_mem2_RID,
        m_axi_mem2_RFIFONUM,
        m_axi_mem2_RUSER,
        m_axi_mem2_RRESP,
        m_axi_mem2_BVALID,
        m_axi_mem2_BREADY,
        m_axi_mem2_BRESP,
        m_axi_mem2_BID,
        m_axi_mem2_BUSER,
        mul83,
        mul_ln104,
        zext_ln104,
        tileW,
        mul_ln90,
        out_w,
        zext_ln91_3,
        output_r,
        localOut_address0,
        localOut_ce0,
        localOut_we0,
        localOut_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_mem2_AWVALID;
input   m_axi_mem2_AWREADY;
output  [63:0] m_axi_mem2_AWADDR;
output  [0:0] m_axi_mem2_AWID;
output  [31:0] m_axi_mem2_AWLEN;
output  [2:0] m_axi_mem2_AWSIZE;
output  [1:0] m_axi_mem2_AWBURST;
output  [1:0] m_axi_mem2_AWLOCK;
output  [3:0] m_axi_mem2_AWCACHE;
output  [2:0] m_axi_mem2_AWPROT;
output  [3:0] m_axi_mem2_AWQOS;
output  [3:0] m_axi_mem2_AWREGION;
output  [0:0] m_axi_mem2_AWUSER;
output   m_axi_mem2_WVALID;
input   m_axi_mem2_WREADY;
output  [31:0] m_axi_mem2_WDATA;
output  [3:0] m_axi_mem2_WSTRB;
output   m_axi_mem2_WLAST;
output  [0:0] m_axi_mem2_WID;
output  [0:0] m_axi_mem2_WUSER;
output   m_axi_mem2_ARVALID;
input   m_axi_mem2_ARREADY;
output  [63:0] m_axi_mem2_ARADDR;
output  [0:0] m_axi_mem2_ARID;
output  [31:0] m_axi_mem2_ARLEN;
output  [2:0] m_axi_mem2_ARSIZE;
output  [1:0] m_axi_mem2_ARBURST;
output  [1:0] m_axi_mem2_ARLOCK;
output  [3:0] m_axi_mem2_ARCACHE;
output  [2:0] m_axi_mem2_ARPROT;
output  [3:0] m_axi_mem2_ARQOS;
output  [3:0] m_axi_mem2_ARREGION;
output  [0:0] m_axi_mem2_ARUSER;
input   m_axi_mem2_RVALID;
output   m_axi_mem2_RREADY;
input  [31:0] m_axi_mem2_RDATA;
input   m_axi_mem2_RLAST;
input  [0:0] m_axi_mem2_RID;
input  [8:0] m_axi_mem2_RFIFONUM;
input  [0:0] m_axi_mem2_RUSER;
input  [1:0] m_axi_mem2_RRESP;
input   m_axi_mem2_BVALID;
output   m_axi_mem2_BREADY;
input  [1:0] m_axi_mem2_BRESP;
input  [0:0] m_axi_mem2_BID;
input  [0:0] m_axi_mem2_BUSER;
input  [31:0] mul83;
input  [63:0] mul_ln104;
input  [31:0] zext_ln104;
input  [31:0] tileW;
input  [31:0] mul_ln90;
input  [31:0] out_w;
input  [30:0] zext_ln91_3;
input  [63:0] output_r;
output  [11:0] localOut_address0;
output   localOut_ce0;
output   localOut_we0;
output  [31:0] localOut_d0;

reg ap_idle;
reg m_axi_mem2_ARVALID;
reg m_axi_mem2_RREADY;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_idle_pp0;
reg    ap_block_state47_pp0_stage0_iter46;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln119_fu_211_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    mem2_blk_n_AR;
wire    ap_block_pp0_stage0;
reg    mem2_blk_n_R;
reg    ap_block_pp0_stage0_11001;
wire   [31:0] zext_ln91_3_cast_fu_173_p1;
reg   [31:0] zext_ln91_3_cast_reg_481;
wire   [32:0] zext_ln104_cast_fu_177_p1;
reg   [32:0] zext_ln104_cast_reg_486;
wire   [0:0] icmp_ln120_fu_206_p2;
reg   [0:0] icmp_ln120_reg_491;
reg   [0:0] icmp_ln120_reg_491_pp0_iter2_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter3_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter4_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter5_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter6_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter7_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter8_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter9_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter10_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter11_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter12_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter13_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter14_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter15_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter16_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter17_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter18_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter19_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter20_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter21_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter22_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter23_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter24_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter25_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter26_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter27_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter28_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter29_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter30_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter31_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter32_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter33_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter34_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter35_reg;
reg   [0:0] icmp_ln120_reg_491_pp0_iter36_reg;
wire   [31:0] zext_ln119_fu_230_p1;
wire   [31:0] add_ln124_2_fu_279_p2;
reg   [31:0] add_ln124_2_reg_506;
wire   [11:0] trunc_ln123_2_fu_285_p1;
reg   [11:0] trunc_ln123_2_reg_511;
wire   [11:0] trunc_ln123_3_fu_289_p1;
reg   [11:0] trunc_ln123_3_reg_516;
reg   [63:0] mem2_addr_1_reg_521;
wire   [11:0] add_ln123_1_fu_411_p2;
reg   [11:0] add_ln123_1_reg_527;
reg   [11:0] add_ln123_1_reg_527_pp0_iter38_reg;
reg   [11:0] add_ln123_1_reg_527_pp0_iter39_reg;
reg   [11:0] add_ln123_1_reg_527_pp0_iter40_reg;
reg   [11:0] add_ln123_1_reg_527_pp0_iter41_reg;
reg   [11:0] add_ln123_1_reg_527_pp0_iter42_reg;
reg   [11:0] add_ln123_1_reg_527_pp0_iter43_reg;
reg   [11:0] add_ln123_1_reg_527_pp0_iter44_reg;
reg   [11:0] add_ln123_1_reg_527_pp0_iter45_reg;
reg   [11:0] add_ln123_1_reg_527_pp0_iter46_reg;
reg   [31:0] mem2_addr_1_read_reg_532;
wire   [63:0] zext_ln123_fu_425_p1;
wire  signed [63:0] sext_ln124_1_fu_384_p1;
reg   [30:0] i_fu_84;
wire   [30:0] i_3_fu_250_p3;
wire    ap_loop_init;
reg   [30:0] oc2_fu_88;
wire   [30:0] select_ln119_1_fu_302_p3;
reg   [63:0] indvar_flatten63_fu_92;
wire   [63:0] add_ln119_1_fu_216_p2;
reg    localOut_we0_local;
wire   [31:0] bitcast_ln124_fu_421_p1;
reg    localOut_ce0_local;
wire  signed [31:0] mul_ln124_fu_169_p0;
wire   [31:0] zext_ln120_1_fu_202_p1;
wire   [30:0] select_ln119_fu_222_p3;
wire   [30:0] add_ln120_fu_244_p2;
wire   [31:0] grp_fu_234_p2;
wire   [31:0] mul_ln124_fu_169_p2;
wire   [31:0] add_ln124_1_fu_274_p2;
wire   [31:0] grp_fu_239_p2;
wire   [30:0] add_ln119_fu_296_p2;
wire   [8:0] trunc_ln123_1_fu_313_p1;
wire   [11:0] p_shl_fu_317_p3;
wire   [11:0] trunc_ln123_fu_309_p1;
wire   [32:0] oc2_cast16_fu_331_p1;
wire   [32:0] empty_fu_335_p2;
wire   [42:0] tmp_s_fu_340_p3;
wire   [33:0] shl_ln2_fu_352_p3;
wire  signed [63:0] sext_ln124_fu_359_p1;
wire   [63:0] add_ln124_4_fu_363_p2;
wire   [63:0] zext_ln120_fu_348_p1;
wire   [63:0] add_ln124_3_fu_368_p2;
wire   [61:0] trunc_ln2_fu_374_p4;
wire   [11:0] sub_ln123_fu_325_p2;
wire   [11:0] add_ln123_fu_394_p2;
wire   [11:0] shl_ln123_fu_399_p2;
wire   [11:0] sub_ln123_1_fu_405_p2;
reg    grp_fu_234_ce;
reg    grp_fu_239_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg    ap_loop_exit_ready_pp0_iter41_reg;
reg    ap_loop_exit_ready_pp0_iter42_reg;
reg    ap_loop_exit_ready_pp0_iter43_reg;
reg    ap_loop_exit_ready_pp0_iter44_reg;
reg    ap_loop_exit_ready_pp0_iter45_reg;
reg    ap_loop_exit_ready_pp0_iter46_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 i_fu_84 = 31'd0;
#0 oc2_fu_88 = 31'd0;
#0 indvar_flatten63_fu_92 = 64'd0;
#0 ap_done_reg = 1'b0;
end

conv_via_tiling_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U12(
    .din0(mul_ln124_fu_169_p0),
    .din1(out_w),
    .dout(mul_ln124_fu_169_p2)
);

conv_via_tiling_sdiv_32ns_32ns_32_36_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sdiv_32ns_32ns_32_36_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(zext_ln119_fu_230_p1),
    .din1(tileW),
    .ce(grp_fu_234_ce),
    .dout(grp_fu_234_p2)
);

conv_via_tiling_srem_32ns_32ns_32_36_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
srem_32ns_32ns_32_36_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(zext_ln119_fu_230_p1),
    .din1(tileW),
    .ce(grp_fu_239_ce),
    .dout(grp_fu_239_p2)
);

conv_via_tiling_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter46_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_84 <= 31'd0;
        end else if (((icmp_ln119_fu_211_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_fu_84 <= i_3_fu_250_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten63_fu_92 <= 64'd0;
        end else if (((icmp_ln119_fu_211_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten63_fu_92 <= add_ln119_1_fu_216_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            oc2_fu_88 <= 31'd0;
        end else if ((ap_enable_reg_pp0_iter37 == 1'b1)) begin
            oc2_fu_88 <= select_ln119_1_fu_302_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln123_1_reg_527 <= add_ln123_1_fu_411_p2;
        add_ln123_1_reg_527_pp0_iter38_reg <= add_ln123_1_reg_527;
        add_ln123_1_reg_527_pp0_iter39_reg <= add_ln123_1_reg_527_pp0_iter38_reg;
        add_ln123_1_reg_527_pp0_iter40_reg <= add_ln123_1_reg_527_pp0_iter39_reg;
        add_ln123_1_reg_527_pp0_iter41_reg <= add_ln123_1_reg_527_pp0_iter40_reg;
        add_ln123_1_reg_527_pp0_iter42_reg <= add_ln123_1_reg_527_pp0_iter41_reg;
        add_ln123_1_reg_527_pp0_iter43_reg <= add_ln123_1_reg_527_pp0_iter42_reg;
        add_ln123_1_reg_527_pp0_iter44_reg <= add_ln123_1_reg_527_pp0_iter43_reg;
        add_ln123_1_reg_527_pp0_iter45_reg <= add_ln123_1_reg_527_pp0_iter44_reg;
        add_ln123_1_reg_527_pp0_iter46_reg <= add_ln123_1_reg_527_pp0_iter45_reg;
        add_ln124_2_reg_506 <= add_ln124_2_fu_279_p2;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
        ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
        ap_loop_exit_ready_pp0_iter42_reg <= ap_loop_exit_ready_pp0_iter41_reg;
        ap_loop_exit_ready_pp0_iter43_reg <= ap_loop_exit_ready_pp0_iter42_reg;
        ap_loop_exit_ready_pp0_iter44_reg <= ap_loop_exit_ready_pp0_iter43_reg;
        ap_loop_exit_ready_pp0_iter45_reg <= ap_loop_exit_ready_pp0_iter44_reg;
        ap_loop_exit_ready_pp0_iter46_reg <= ap_loop_exit_ready_pp0_iter45_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        icmp_ln120_reg_491_pp0_iter10_reg <= icmp_ln120_reg_491_pp0_iter9_reg;
        icmp_ln120_reg_491_pp0_iter11_reg <= icmp_ln120_reg_491_pp0_iter10_reg;
        icmp_ln120_reg_491_pp0_iter12_reg <= icmp_ln120_reg_491_pp0_iter11_reg;
        icmp_ln120_reg_491_pp0_iter13_reg <= icmp_ln120_reg_491_pp0_iter12_reg;
        icmp_ln120_reg_491_pp0_iter14_reg <= icmp_ln120_reg_491_pp0_iter13_reg;
        icmp_ln120_reg_491_pp0_iter15_reg <= icmp_ln120_reg_491_pp0_iter14_reg;
        icmp_ln120_reg_491_pp0_iter16_reg <= icmp_ln120_reg_491_pp0_iter15_reg;
        icmp_ln120_reg_491_pp0_iter17_reg <= icmp_ln120_reg_491_pp0_iter16_reg;
        icmp_ln120_reg_491_pp0_iter18_reg <= icmp_ln120_reg_491_pp0_iter17_reg;
        icmp_ln120_reg_491_pp0_iter19_reg <= icmp_ln120_reg_491_pp0_iter18_reg;
        icmp_ln120_reg_491_pp0_iter20_reg <= icmp_ln120_reg_491_pp0_iter19_reg;
        icmp_ln120_reg_491_pp0_iter21_reg <= icmp_ln120_reg_491_pp0_iter20_reg;
        icmp_ln120_reg_491_pp0_iter22_reg <= icmp_ln120_reg_491_pp0_iter21_reg;
        icmp_ln120_reg_491_pp0_iter23_reg <= icmp_ln120_reg_491_pp0_iter22_reg;
        icmp_ln120_reg_491_pp0_iter24_reg <= icmp_ln120_reg_491_pp0_iter23_reg;
        icmp_ln120_reg_491_pp0_iter25_reg <= icmp_ln120_reg_491_pp0_iter24_reg;
        icmp_ln120_reg_491_pp0_iter26_reg <= icmp_ln120_reg_491_pp0_iter25_reg;
        icmp_ln120_reg_491_pp0_iter27_reg <= icmp_ln120_reg_491_pp0_iter26_reg;
        icmp_ln120_reg_491_pp0_iter28_reg <= icmp_ln120_reg_491_pp0_iter27_reg;
        icmp_ln120_reg_491_pp0_iter29_reg <= icmp_ln120_reg_491_pp0_iter28_reg;
        icmp_ln120_reg_491_pp0_iter2_reg <= icmp_ln120_reg_491;
        icmp_ln120_reg_491_pp0_iter30_reg <= icmp_ln120_reg_491_pp0_iter29_reg;
        icmp_ln120_reg_491_pp0_iter31_reg <= icmp_ln120_reg_491_pp0_iter30_reg;
        icmp_ln120_reg_491_pp0_iter32_reg <= icmp_ln120_reg_491_pp0_iter31_reg;
        icmp_ln120_reg_491_pp0_iter33_reg <= icmp_ln120_reg_491_pp0_iter32_reg;
        icmp_ln120_reg_491_pp0_iter34_reg <= icmp_ln120_reg_491_pp0_iter33_reg;
        icmp_ln120_reg_491_pp0_iter35_reg <= icmp_ln120_reg_491_pp0_iter34_reg;
        icmp_ln120_reg_491_pp0_iter36_reg <= icmp_ln120_reg_491_pp0_iter35_reg;
        icmp_ln120_reg_491_pp0_iter3_reg <= icmp_ln120_reg_491_pp0_iter2_reg;
        icmp_ln120_reg_491_pp0_iter4_reg <= icmp_ln120_reg_491_pp0_iter3_reg;
        icmp_ln120_reg_491_pp0_iter5_reg <= icmp_ln120_reg_491_pp0_iter4_reg;
        icmp_ln120_reg_491_pp0_iter6_reg <= icmp_ln120_reg_491_pp0_iter5_reg;
        icmp_ln120_reg_491_pp0_iter7_reg <= icmp_ln120_reg_491_pp0_iter6_reg;
        icmp_ln120_reg_491_pp0_iter8_reg <= icmp_ln120_reg_491_pp0_iter7_reg;
        icmp_ln120_reg_491_pp0_iter9_reg <= icmp_ln120_reg_491_pp0_iter8_reg;
        mem2_addr_1_read_reg_532 <= m_axi_mem2_RDATA;
        mem2_addr_1_reg_521 <= sext_ln124_1_fu_384_p1;
        trunc_ln123_2_reg_511 <= trunc_ln123_2_fu_285_p1;
        trunc_ln123_3_reg_516 <= trunc_ln123_3_fu_289_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        icmp_ln120_reg_491 <= icmp_ln120_fu_206_p2;
        zext_ln104_cast_reg_486[31 : 0] <= zext_ln104_cast_fu_177_p1[31 : 0];
        zext_ln91_3_cast_reg_481[30 : 0] <= zext_ln91_3_cast_fu_173_p1[30 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln119_fu_211_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter46_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) 
    & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_234_ce = 1'b1;
    end else begin
        grp_fu_234_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_239_ce = 1'b1;
    end else begin
        grp_fu_239_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter47 == 1'b1))) begin
        localOut_ce0_local = 1'b1;
    end else begin
        localOut_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter47 == 1'b1))) begin
        localOut_we0_local = 1'b1;
    end else begin
        localOut_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
        m_axi_mem2_ARVALID = 1'b1;
    end else begin
        m_axi_mem2_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        m_axi_mem2_RREADY = 1'b1;
    end else begin
        m_axi_mem2_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
        mem2_blk_n_AR = m_axi_mem2_ARREADY;
    end else begin
        mem2_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        mem2_blk_n_R = m_axi_mem2_RVALID;
    end else begin
        mem2_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln119_1_fu_216_p2 = (indvar_flatten63_fu_92 + 64'd1);

assign add_ln119_fu_296_p2 = (oc2_fu_88 + 31'd1);

assign add_ln120_fu_244_p2 = (i_fu_84 + 31'd1);

assign add_ln123_1_fu_411_p2 = (sub_ln123_1_fu_405_p2 + trunc_ln123_3_reg_516);

assign add_ln123_fu_394_p2 = (sub_ln123_fu_325_p2 + trunc_ln123_2_reg_511);

assign add_ln124_1_fu_274_p2 = (zext_ln91_3_cast_reg_481 + mul_ln124_fu_169_p2);

assign add_ln124_2_fu_279_p2 = (add_ln124_1_fu_274_p2 + grp_fu_239_p2);

assign add_ln124_3_fu_368_p2 = (add_ln124_4_fu_363_p2 + zext_ln120_fu_348_p1);

assign add_ln124_4_fu_363_p2 = ($signed(sext_ln124_fu_359_p1) + $signed(output_r));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b1 == ap_block_state47_pp0_stage0_iter46) & (ap_enable_reg_pp0_iter46 == 1'b1)) | ((m_axi_mem2_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b1 == ap_block_state47_pp0_stage0_iter46) & (ap_enable_reg_pp0_iter46 == 1'b1)) | ((m_axi_mem2_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b1)));
end

always @ (*) begin
    ap_block_state47_pp0_stage0_iter46 = (m_axi_mem2_RVALID == 1'b0);
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_ready = ap_ready_sig;

assign bitcast_ln124_fu_421_p1 = mem2_addr_1_read_reg_532;

assign empty_fu_335_p2 = (oc2_cast16_fu_331_p1 + zext_ln104_cast_reg_486);

assign i_3_fu_250_p3 = ((icmp_ln120_fu_206_p2[0:0] == 1'b1) ? add_ln120_fu_244_p2 : 31'd1);

assign icmp_ln119_fu_211_p2 = ((indvar_flatten63_fu_92 == mul_ln104) ? 1'b1 : 1'b0);

assign icmp_ln120_fu_206_p2 = (($signed(zext_ln120_1_fu_202_p1) < $signed(mul83)) ? 1'b1 : 1'b0);

assign localOut_address0 = zext_ln123_fu_425_p1;

assign localOut_ce0 = localOut_ce0_local;

assign localOut_d0 = bitcast_ln124_fu_421_p1;

assign localOut_we0 = localOut_we0_local;

assign m_axi_mem2_ARADDR = mem2_addr_1_reg_521;

assign m_axi_mem2_ARBURST = 2'd0;

assign m_axi_mem2_ARCACHE = 4'd0;

assign m_axi_mem2_ARID = 1'd0;

assign m_axi_mem2_ARLEN = 64'd1;

assign m_axi_mem2_ARLOCK = 2'd0;

assign m_axi_mem2_ARPROT = 3'd0;

assign m_axi_mem2_ARQOS = 4'd0;

assign m_axi_mem2_ARREGION = 4'd0;

assign m_axi_mem2_ARSIZE = 3'd0;

assign m_axi_mem2_ARUSER = 1'd0;

assign m_axi_mem2_AWADDR = 64'd0;

assign m_axi_mem2_AWBURST = 2'd0;

assign m_axi_mem2_AWCACHE = 4'd0;

assign m_axi_mem2_AWID = 1'd0;

assign m_axi_mem2_AWLEN = 32'd0;

assign m_axi_mem2_AWLOCK = 2'd0;

assign m_axi_mem2_AWPROT = 3'd0;

assign m_axi_mem2_AWQOS = 4'd0;

assign m_axi_mem2_AWREGION = 4'd0;

assign m_axi_mem2_AWSIZE = 3'd0;

assign m_axi_mem2_AWUSER = 1'd0;

assign m_axi_mem2_AWVALID = 1'b0;

assign m_axi_mem2_BREADY = 1'b0;

assign m_axi_mem2_WDATA = 32'd0;

assign m_axi_mem2_WID = 1'd0;

assign m_axi_mem2_WLAST = 1'b0;

assign m_axi_mem2_WSTRB = 4'd0;

assign m_axi_mem2_WUSER = 1'd0;

assign m_axi_mem2_WVALID = 1'b0;

assign mul_ln124_fu_169_p0 = (grp_fu_234_p2 + mul_ln90);

assign oc2_cast16_fu_331_p1 = select_ln119_1_fu_302_p3;

assign p_shl_fu_317_p3 = {{trunc_ln123_1_fu_313_p1}, {3'd0}};

assign select_ln119_1_fu_302_p3 = ((icmp_ln120_reg_491_pp0_iter36_reg[0:0] == 1'b1) ? oc2_fu_88 : add_ln119_fu_296_p2);

assign select_ln119_fu_222_p3 = ((icmp_ln120_fu_206_p2[0:0] == 1'b1) ? i_fu_84 : 31'd0);

assign sext_ln124_1_fu_384_p1 = $signed(trunc_ln2_fu_374_p4);

assign sext_ln124_fu_359_p1 = $signed(shl_ln2_fu_352_p3);

assign shl_ln123_fu_399_p2 = add_ln123_fu_394_p2 << 12'd3;

assign shl_ln2_fu_352_p3 = {{add_ln124_2_reg_506}, {2'd0}};

assign sub_ln123_1_fu_405_p2 = (shl_ln123_fu_399_p2 - add_ln123_fu_394_p2);

assign sub_ln123_fu_325_p2 = (p_shl_fu_317_p3 - trunc_ln123_fu_309_p1);

assign tmp_s_fu_340_p3 = {{empty_fu_335_p2}, {10'd0}};

assign trunc_ln123_1_fu_313_p1 = select_ln119_1_fu_302_p3[8:0];

assign trunc_ln123_2_fu_285_p1 = grp_fu_234_p2[11:0];

assign trunc_ln123_3_fu_289_p1 = grp_fu_239_p2[11:0];

assign trunc_ln123_fu_309_p1 = select_ln119_1_fu_302_p3[11:0];

assign trunc_ln2_fu_374_p4 = {{add_ln124_3_fu_368_p2[63:2]}};

assign zext_ln104_cast_fu_177_p1 = zext_ln104;

assign zext_ln119_fu_230_p1 = select_ln119_fu_222_p3;

assign zext_ln120_1_fu_202_p1 = i_fu_84;

assign zext_ln120_fu_348_p1 = tmp_s_fu_340_p3;

assign zext_ln123_fu_425_p1 = add_ln123_1_reg_527_pp0_iter46_reg;

assign zext_ln91_3_cast_fu_173_p1 = zext_ln91_3;

always @ (posedge ap_clk) begin
    zext_ln91_3_cast_reg_481[31] <= 1'b0;
    zext_ln104_cast_reg_486[32] <= 1'b0;
end

endmodule //conv_via_tiling_conv_via_tiling_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11
