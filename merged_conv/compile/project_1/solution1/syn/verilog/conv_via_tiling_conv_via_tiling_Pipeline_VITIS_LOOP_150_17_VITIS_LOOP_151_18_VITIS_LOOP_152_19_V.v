// ==============================================================
// Generated by Vitis HLS v2024.1.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module conv_via_tiling_conv_via_tiling_Pipeline_VITIS_LOOP_150_17_VITIS_LOOP_151_18_VITIS_LOOP_152_19_V (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_mem1_AWVALID,
        m_axi_mem1_AWREADY,
        m_axi_mem1_AWADDR,
        m_axi_mem1_AWID,
        m_axi_mem1_AWLEN,
        m_axi_mem1_AWSIZE,
        m_axi_mem1_AWBURST,
        m_axi_mem1_AWLOCK,
        m_axi_mem1_AWCACHE,
        m_axi_mem1_AWPROT,
        m_axi_mem1_AWQOS,
        m_axi_mem1_AWREGION,
        m_axi_mem1_AWUSER,
        m_axi_mem1_WVALID,
        m_axi_mem1_WREADY,
        m_axi_mem1_WDATA,
        m_axi_mem1_WSTRB,
        m_axi_mem1_WLAST,
        m_axi_mem1_WID,
        m_axi_mem1_WUSER,
        m_axi_mem1_ARVALID,
        m_axi_mem1_ARREADY,
        m_axi_mem1_ARADDR,
        m_axi_mem1_ARID,
        m_axi_mem1_ARLEN,
        m_axi_mem1_ARSIZE,
        m_axi_mem1_ARBURST,
        m_axi_mem1_ARLOCK,
        m_axi_mem1_ARCACHE,
        m_axi_mem1_ARPROT,
        m_axi_mem1_ARQOS,
        m_axi_mem1_ARREGION,
        m_axi_mem1_ARUSER,
        m_axi_mem1_RVALID,
        m_axi_mem1_RREADY,
        m_axi_mem1_RDATA,
        m_axi_mem1_RLAST,
        m_axi_mem1_RID,
        m_axi_mem1_RFIFONUM,
        m_axi_mem1_RUSER,
        m_axi_mem1_RRESP,
        m_axi_mem1_BVALID,
        m_axi_mem1_BREADY,
        m_axi_mem1_BRESP,
        m_axi_mem1_BID,
        m_axi_mem1_BUSER,
        mul_ln131_1,
        localW_address0,
        localW_ce0,
        localW_we0,
        localW_d0,
        localW_1_address0,
        localW_1_ce0,
        localW_1_we0,
        localW_1_d0,
        localW_2_address0,
        localW_2_ce0,
        localW_2_we0,
        localW_2_d0,
        localW_3_address0,
        localW_3_ce0,
        localW_3_we0,
        localW_3_d0,
        localW_4_address0,
        localW_4_ce0,
        localW_4_we0,
        localW_4_d0,
        localW_5_address0,
        localW_5_ce0,
        localW_5_we0,
        localW_5_d0,
        localW_6_address0,
        localW_6_ce0,
        localW_6_we0,
        localW_6_d0,
        localW_7_address0,
        localW_7_ce0,
        localW_7_we0,
        localW_7_d0,
        localW_8_address0,
        localW_8_ce0,
        localW_8_we0,
        localW_8_d0,
        zext_ln150,
        mul_ln131,
        zext_ln104,
        weight,
        p_cast44
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_mem1_AWVALID;
input   m_axi_mem1_AWREADY;
output  [63:0] m_axi_mem1_AWADDR;
output  [0:0] m_axi_mem1_AWID;
output  [31:0] m_axi_mem1_AWLEN;
output  [2:0] m_axi_mem1_AWSIZE;
output  [1:0] m_axi_mem1_AWBURST;
output  [1:0] m_axi_mem1_AWLOCK;
output  [3:0] m_axi_mem1_AWCACHE;
output  [2:0] m_axi_mem1_AWPROT;
output  [3:0] m_axi_mem1_AWQOS;
output  [3:0] m_axi_mem1_AWREGION;
output  [0:0] m_axi_mem1_AWUSER;
output   m_axi_mem1_WVALID;
input   m_axi_mem1_WREADY;
output  [31:0] m_axi_mem1_WDATA;
output  [3:0] m_axi_mem1_WSTRB;
output   m_axi_mem1_WLAST;
output  [0:0] m_axi_mem1_WID;
output  [0:0] m_axi_mem1_WUSER;
output   m_axi_mem1_ARVALID;
input   m_axi_mem1_ARREADY;
output  [63:0] m_axi_mem1_ARADDR;
output  [0:0] m_axi_mem1_ARID;
output  [31:0] m_axi_mem1_ARLEN;
output  [2:0] m_axi_mem1_ARSIZE;
output  [1:0] m_axi_mem1_ARBURST;
output  [1:0] m_axi_mem1_ARLOCK;
output  [3:0] m_axi_mem1_ARCACHE;
output  [2:0] m_axi_mem1_ARPROT;
output  [3:0] m_axi_mem1_ARQOS;
output  [3:0] m_axi_mem1_ARREGION;
output  [0:0] m_axi_mem1_ARUSER;
input   m_axi_mem1_RVALID;
output   m_axi_mem1_RREADY;
input  [31:0] m_axi_mem1_RDATA;
input   m_axi_mem1_RLAST;
input  [0:0] m_axi_mem1_RID;
input  [8:0] m_axi_mem1_RFIFONUM;
input  [0:0] m_axi_mem1_RUSER;
input  [1:0] m_axi_mem1_RRESP;
input   m_axi_mem1_BVALID;
output   m_axi_mem1_BREADY;
input  [1:0] m_axi_mem1_BRESP;
input  [0:0] m_axi_mem1_BID;
input  [0:0] m_axi_mem1_BUSER;
input  [67:0] mul_ln131_1;
output  [11:0] localW_address0;
output   localW_ce0;
output   localW_we0;
output  [31:0] localW_d0;
output  [11:0] localW_1_address0;
output   localW_1_ce0;
output   localW_1_we0;
output  [31:0] localW_1_d0;
output  [11:0] localW_2_address0;
output   localW_2_ce0;
output   localW_2_we0;
output  [31:0] localW_2_d0;
output  [11:0] localW_3_address0;
output   localW_3_ce0;
output   localW_3_we0;
output  [31:0] localW_3_d0;
output  [11:0] localW_4_address0;
output   localW_4_ce0;
output   localW_4_we0;
output  [31:0] localW_4_d0;
output  [11:0] localW_5_address0;
output   localW_5_ce0;
output   localW_5_we0;
output  [31:0] localW_5_d0;
output  [11:0] localW_6_address0;
output   localW_6_ce0;
output   localW_6_we0;
output  [31:0] localW_6_d0;
output  [11:0] localW_7_address0;
output   localW_7_ce0;
output   localW_7_we0;
output  [31:0] localW_7_d0;
output  [11:0] localW_8_address0;
output   localW_8_ce0;
output   localW_8_we0;
output  [31:0] localW_8_d0;
input  [34:0] zext_ln150;
input  [35:0] mul_ln131;
input  [31:0] zext_ln104;
input  [63:0] weight;
input  [37:0] p_cast44;

reg ap_idle;
reg m_axi_mem1_ARVALID;
reg m_axi_mem1_RREADY;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_idle_pp0;
reg   [0:0] first_iter_8_reg_871;
reg   [0:0] first_iter_9_mid2_reg_863;
reg   [0:0] select_ln151_1_reg_855;
reg    ap_predicate_op124_readreq_state3;
reg    ap_block_state3_io;
reg    ap_block_state11_pp0_stage0_iter10;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln150_fu_368_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    mem1_blk_n_R;
wire    ap_block_pp0_stage0;
reg    mem1_blk_n_AR;
reg    ap_block_pp0_stage0_11001;
wire   [63:0] p_cast44_cast_fu_312_p1;
reg   [63:0] p_cast44_cast_reg_836;
wire   [32:0] zext_ln104_cast_fu_316_p1;
reg   [32:0] zext_ln104_cast_reg_841;
wire   [63:0] zext_ln150_cast_fu_320_p1;
reg   [63:0] zext_ln150_cast_reg_846;
wire   [0:0] select_ln151_1_fu_496_p3;
wire   [1:0] kc_mid2_fu_560_p3;
reg   [1:0] kc_mid2_reg_859;
reg   [1:0] kc_mid2_reg_859_pp0_iter2_reg;
reg   [1:0] kc_mid2_reg_859_pp0_iter3_reg;
reg   [1:0] kc_mid2_reg_859_pp0_iter4_reg;
reg   [1:0] kc_mid2_reg_859_pp0_iter5_reg;
reg   [1:0] kc_mid2_reg_859_pp0_iter6_reg;
reg   [1:0] kc_mid2_reg_859_pp0_iter7_reg;
reg   [1:0] kc_mid2_reg_859_pp0_iter8_reg;
reg   [1:0] kc_mid2_reg_859_pp0_iter9_reg;
reg   [1:0] kc_mid2_reg_859_pp0_iter10_reg;
wire   [0:0] first_iter_9_mid2_fu_574_p3;
wire   [1:0] select_ln152_fu_582_p3;
reg   [1:0] select_ln152_reg_867;
reg   [1:0] select_ln152_reg_867_pp0_iter2_reg;
reg   [1:0] select_ln152_reg_867_pp0_iter3_reg;
reg   [1:0] select_ln152_reg_867_pp0_iter4_reg;
reg   [1:0] select_ln152_reg_867_pp0_iter5_reg;
reg   [1:0] select_ln152_reg_867_pp0_iter6_reg;
reg   [1:0] select_ln152_reg_867_pp0_iter7_reg;
reg   [1:0] select_ln152_reg_867_pp0_iter8_reg;
reg   [1:0] select_ln152_reg_867_pp0_iter9_reg;
reg   [1:0] select_ln152_reg_867_pp0_iter10_reg;
wire   [0:0] first_iter_8_fu_590_p2;
reg   [63:0] mem1_addr_reg_875;
wire   [11:0] empty_50_fu_681_p2;
reg   [11:0] empty_50_reg_881;
reg   [11:0] empty_50_reg_881_pp0_iter2_reg;
reg   [11:0] empty_50_reg_881_pp0_iter3_reg;
reg   [11:0] empty_50_reg_881_pp0_iter4_reg;
reg   [11:0] empty_50_reg_881_pp0_iter5_reg;
reg   [11:0] empty_50_reg_881_pp0_iter6_reg;
reg   [11:0] empty_50_reg_881_pp0_iter7_reg;
reg   [11:0] empty_50_reg_881_pp0_iter8_reg;
reg   [11:0] empty_50_reg_881_pp0_iter9_reg;
reg   [11:0] empty_50_reg_881_pp0_iter10_reg;
wire   [31:0] bitcast_ln155_fu_756_p1;
reg   [31:0] bitcast_ln155_reg_886;
wire   [63:0] p_cast_fu_760_p1;
wire  signed [63:0] sext_ln151_fu_659_p1;
reg   [1:0] kc_fu_120;
wire   [1:0] add_ln153_fu_687_p2;
wire    ap_loop_init;
reg   [1:0] kr_fu_124;
reg   [3:0] indvar_flatten113_fu_128;
wire   [3:0] select_ln152_1_fu_699_p3;
reg   [30:0] ic2_fu_132;
wire   [30:0] select_ln151_2_fu_534_p3;
reg   [35:0] indvar_flatten129_fu_136;
wire   [35:0] select_ln151_3_fu_713_p3;
reg   [30:0] oc2_fu_140;
wire   [30:0] select_ln150_1_fu_458_p3;
reg   [67:0] indvar_flatten158_fu_144;
wire   [67:0] add_ln150_1_fu_373_p2;
reg    localW_4_we0_local;
reg    localW_4_ce0_local;
reg    localW_3_we0_local;
reg    localW_3_ce0_local;
reg    localW_5_we0_local;
reg    localW_5_ce0_local;
reg    localW_1_we0_local;
reg    localW_1_ce0_local;
reg    localW_we0_local;
reg    localW_ce0_local;
reg    localW_2_we0_local;
reg    localW_2_ce0_local;
reg    localW_7_we0_local;
reg    localW_7_ce0_local;
reg    localW_6_we0_local;
reg    localW_6_ce0_local;
reg    localW_8_we0_local;
reg    localW_8_ce0_local;
wire   [0:0] icmp_ln151_fu_397_p2;
wire   [0:0] first_iter_10343_fu_410_p2;
wire   [0:0] first_iter_9346_fu_422_p2;
wire   [0:0] icmp_ln152_fu_446_p2;
wire   [0:0] xor_ln150_fu_434_p2;
wire   [30:0] add_ln150_fu_391_p2;
wire   [30:0] select_ln150_fu_402_p3;
wire   [0:0] and_ln150_1_fu_452_p2;
wire   [0:0] or_ln151_fu_476_p2;
wire   [30:0] add_ln151_fu_470_p2;
wire   [0:0] first_iter_10_mid1_fu_490_p2;
wire   [0:0] or_ln150_fu_416_p2;
wire   [0:0] or_ln150_1_fu_428_p2;
wire   [0:0] xor_ln151_fu_510_p2;
wire   [0:0] or_ln151_2_fu_516_p2;
wire   [0:0] and_ln150_fu_522_p2;
wire   [0:0] icmp_ln153_fu_440_p2;
wire   [1:0] select_ln151_fu_482_p3;
wire   [0:0] and_ln151_fu_528_p2;
wire   [0:0] empty_53_fu_548_p2;
wire   [0:0] empty_54_fu_554_p2;
wire   [1:0] add_ln152_fu_542_p2;
wire   [0:0] first_iter_9_mid1_fu_568_p2;
wire   [0:0] or_ln151_1_fu_504_p2;
wire   [32:0] zext_ln150_1_fu_596_p1;
wire   [32:0] empty_55_fu_600_p2;
wire   [45:0] tmp_fu_605_p3;
wire   [42:0] tmp_5_fu_617_p3;
wire   [46:0] p_shl_fu_613_p1;
wire   [46:0] p_shl17_fu_625_p1;
wire   [46:0] empty_56_fu_629_p2;
wire   [63:0] p_cast49_fu_635_p1;
wire   [63:0] tmp6_fu_639_p2;
wire   [63:0] empty_57_fu_644_p2;
wire   [61:0] trunc_ln3_fu_649_p4;
wire   [5:0] trunc_ln151_fu_466_p1;
wire   [11:0] tmp_s_fu_669_p3;
wire   [11:0] empty_fu_677_p1;
wire   [3:0] add_ln152_1_fu_693_p2;
wire   [35:0] add_ln151_1_fu_707_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 kc_fu_120 = 2'd0;
#0 kr_fu_124 = 2'd0;
#0 indvar_flatten113_fu_128 = 4'd0;
#0 ic2_fu_132 = 31'd0;
#0 indvar_flatten129_fu_136 = 36'd0;
#0 oc2_fu_140 = 31'd0;
#0 indvar_flatten158_fu_144 = 68'd0;
#0 ap_done_reg = 1'b0;
end

conv_via_tiling_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter10_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            ic2_fu_132 <= 31'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln150_fu_368_p2 == 1'd0))) begin
            ic2_fu_132 <= select_ln151_2_fu_534_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten113_fu_128 <= 4'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln150_fu_368_p2 == 1'd0))) begin
            indvar_flatten113_fu_128 <= select_ln152_1_fu_699_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten129_fu_136 <= 36'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln150_fu_368_p2 == 1'd0))) begin
            indvar_flatten129_fu_136 <= select_ln151_3_fu_713_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten158_fu_144 <= 68'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln150_fu_368_p2 == 1'd0))) begin
            indvar_flatten158_fu_144 <= add_ln150_1_fu_373_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            kc_fu_120 <= 2'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln150_fu_368_p2 == 1'd0))) begin
            kc_fu_120 <= add_ln153_fu_687_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            kr_fu_124 <= 2'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln150_fu_368_p2 == 1'd0))) begin
            kr_fu_124 <= select_ln152_fu_582_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            oc2_fu_140 <= 31'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln150_fu_368_p2 == 1'd0))) begin
            oc2_fu_140 <= select_ln150_1_fu_458_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        bitcast_ln155_reg_886 <= bitcast_ln155_fu_756_p1;
        empty_50_reg_881_pp0_iter10_reg <= empty_50_reg_881_pp0_iter9_reg;
        empty_50_reg_881_pp0_iter2_reg <= empty_50_reg_881;
        empty_50_reg_881_pp0_iter3_reg <= empty_50_reg_881_pp0_iter2_reg;
        empty_50_reg_881_pp0_iter4_reg <= empty_50_reg_881_pp0_iter3_reg;
        empty_50_reg_881_pp0_iter5_reg <= empty_50_reg_881_pp0_iter4_reg;
        empty_50_reg_881_pp0_iter6_reg <= empty_50_reg_881_pp0_iter5_reg;
        empty_50_reg_881_pp0_iter7_reg <= empty_50_reg_881_pp0_iter6_reg;
        empty_50_reg_881_pp0_iter8_reg <= empty_50_reg_881_pp0_iter7_reg;
        empty_50_reg_881_pp0_iter9_reg <= empty_50_reg_881_pp0_iter8_reg;
        kc_mid2_reg_859_pp0_iter10_reg <= kc_mid2_reg_859_pp0_iter9_reg;
        kc_mid2_reg_859_pp0_iter2_reg <= kc_mid2_reg_859;
        kc_mid2_reg_859_pp0_iter3_reg <= kc_mid2_reg_859_pp0_iter2_reg;
        kc_mid2_reg_859_pp0_iter4_reg <= kc_mid2_reg_859_pp0_iter3_reg;
        kc_mid2_reg_859_pp0_iter5_reg <= kc_mid2_reg_859_pp0_iter4_reg;
        kc_mid2_reg_859_pp0_iter6_reg <= kc_mid2_reg_859_pp0_iter5_reg;
        kc_mid2_reg_859_pp0_iter7_reg <= kc_mid2_reg_859_pp0_iter6_reg;
        kc_mid2_reg_859_pp0_iter8_reg <= kc_mid2_reg_859_pp0_iter7_reg;
        kc_mid2_reg_859_pp0_iter9_reg <= kc_mid2_reg_859_pp0_iter8_reg;
        select_ln152_reg_867_pp0_iter10_reg <= select_ln152_reg_867_pp0_iter9_reg;
        select_ln152_reg_867_pp0_iter2_reg <= select_ln152_reg_867;
        select_ln152_reg_867_pp0_iter3_reg <= select_ln152_reg_867_pp0_iter2_reg;
        select_ln152_reg_867_pp0_iter4_reg <= select_ln152_reg_867_pp0_iter3_reg;
        select_ln152_reg_867_pp0_iter5_reg <= select_ln152_reg_867_pp0_iter4_reg;
        select_ln152_reg_867_pp0_iter6_reg <= select_ln152_reg_867_pp0_iter5_reg;
        select_ln152_reg_867_pp0_iter7_reg <= select_ln152_reg_867_pp0_iter6_reg;
        select_ln152_reg_867_pp0_iter8_reg <= select_ln152_reg_867_pp0_iter7_reg;
        select_ln152_reg_867_pp0_iter9_reg <= select_ln152_reg_867_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        empty_50_reg_881 <= empty_50_fu_681_p2;
        first_iter_8_reg_871 <= first_iter_8_fu_590_p2;
        first_iter_9_mid2_reg_863 <= first_iter_9_mid2_fu_574_p3;
        kc_mid2_reg_859 <= kc_mid2_fu_560_p3;
        mem1_addr_reg_875 <= sext_ln151_fu_659_p1;
        p_cast44_cast_reg_836[37 : 0] <= p_cast44_cast_fu_312_p1[37 : 0];
        select_ln151_1_reg_855 <= select_ln151_1_fu_496_p3;
        select_ln152_reg_867 <= select_ln152_fu_582_p3;
        zext_ln104_cast_reg_841[31 : 0] <= zext_ln104_cast_fu_316_p1[31 : 0];
        zext_ln150_cast_reg_846[34 : 0] <= zext_ln150_cast_fu_320_p1[34 : 0];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln150_fu_368_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter10_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localW_1_ce0_local = 1'b1;
    end else begin
        localW_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (select_ln152_reg_867_pp0_iter10_reg == 2'd0) & (kc_mid2_reg_859_pp0_iter10_reg == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localW_1_we0_local = 1'b1;
    end else begin
        localW_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localW_2_ce0_local = 1'b1;
    end else begin
        localW_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(kc_mid2_reg_859_pp0_iter10_reg == 2'd0) & ~(kc_mid2_reg_859_pp0_iter10_reg == 2'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (select_ln152_reg_867_pp0_iter10_reg == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localW_2_we0_local = 1'b1;
    end else begin
        localW_2_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localW_3_ce0_local = 1'b1;
    end else begin
        localW_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (select_ln152_reg_867_pp0_iter10_reg == 2'd1) & (kc_mid2_reg_859_pp0_iter10_reg == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localW_3_we0_local = 1'b1;
    end else begin
        localW_3_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localW_4_ce0_local = 1'b1;
    end else begin
        localW_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (select_ln152_reg_867_pp0_iter10_reg == 2'd1) & (kc_mid2_reg_859_pp0_iter10_reg == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localW_4_we0_local = 1'b1;
    end else begin
        localW_4_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localW_5_ce0_local = 1'b1;
    end else begin
        localW_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(kc_mid2_reg_859_pp0_iter10_reg == 2'd0) & ~(kc_mid2_reg_859_pp0_iter10_reg == 2'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (select_ln152_reg_867_pp0_iter10_reg == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localW_5_we0_local = 1'b1;
    end else begin
        localW_5_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localW_6_ce0_local = 1'b1;
    end else begin
        localW_6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(select_ln152_reg_867_pp0_iter10_reg == 2'd0) & ~(select_ln152_reg_867_pp0_iter10_reg == 2'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (kc_mid2_reg_859_pp0_iter10_reg == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localW_6_we0_local = 1'b1;
    end else begin
        localW_6_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localW_7_ce0_local = 1'b1;
    end else begin
        localW_7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(select_ln152_reg_867_pp0_iter10_reg == 2'd0) & ~(select_ln152_reg_867_pp0_iter10_reg == 2'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (kc_mid2_reg_859_pp0_iter10_reg == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localW_7_we0_local = 1'b1;
    end else begin
        localW_7_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localW_8_ce0_local = 1'b1;
    end else begin
        localW_8_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(select_ln152_reg_867_pp0_iter10_reg == 2'd0) & ~(kc_mid2_reg_859_pp0_iter10_reg == 2'd0) & ~(kc_mid2_reg_859_pp0_iter10_reg == 2'd1) & ~(select_ln152_reg_867_pp0_iter10_reg == 2'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localW_8_we0_local = 1'b1;
    end else begin
        localW_8_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localW_ce0_local = 1'b1;
    end else begin
        localW_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (select_ln152_reg_867_pp0_iter10_reg == 2'd0) & (kc_mid2_reg_859_pp0_iter10_reg == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        localW_we0_local = 1'b1;
    end else begin
        localW_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op124_readreq_state3 == 1'b1))) begin
        m_axi_mem1_ARVALID = 1'b1;
    end else begin
        m_axi_mem1_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_mem1_RREADY = 1'b1;
    end else begin
        m_axi_mem1_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op124_readreq_state3 == 1'b1))) begin
        mem1_blk_n_AR = m_axi_mem1_ARREADY;
    end else begin
        mem1_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        mem1_blk_n_R = m_axi_mem1_RVALID;
    end else begin
        mem1_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln150_1_fu_373_p2 = (indvar_flatten158_fu_144 + 68'd1);

assign add_ln150_fu_391_p2 = (oc2_fu_140 + 31'd1);

assign add_ln151_1_fu_707_p2 = (indvar_flatten129_fu_136 + 36'd1);

assign add_ln151_fu_470_p2 = (select_ln150_fu_402_p3 + 31'd1);

assign add_ln152_1_fu_693_p2 = (indvar_flatten113_fu_128 + 4'd1);

assign add_ln152_fu_542_p2 = (select_ln151_fu_482_p3 + 2'd1);

assign add_ln153_fu_687_p2 = (kc_mid2_fu_560_p3 + 2'd1);

assign and_ln150_1_fu_452_p2 = (xor_ln150_fu_434_p2 & icmp_ln152_fu_446_p2);

assign and_ln150_fu_522_p2 = (xor_ln150_fu_434_p2 & or_ln151_2_fu_516_p2);

assign and_ln151_fu_528_p2 = (icmp_ln153_fu_440_p2 & and_ln150_fu_522_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_block_state11_pp0_stage0_iter10)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_block_state11_pp0_stage0_iter10)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

always @ (*) begin
    ap_block_state11_pp0_stage0_iter10 = (m_axi_mem1_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state3_io = ((m_axi_mem1_ARREADY == 1'b0) & (ap_predicate_op124_readreq_state3 == 1'b1));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

always @ (*) begin
    ap_predicate_op124_readreq_state3 = ((select_ln151_1_reg_855 == 1'd1) & (first_iter_9_mid2_reg_863 == 1'd1) & (first_iter_8_reg_871 == 1'd1));
end

assign ap_ready = ap_ready_sig;

assign bitcast_ln155_fu_756_p1 = m_axi_mem1_RDATA;

assign empty_50_fu_681_p2 = (tmp_s_fu_669_p3 + empty_fu_677_p1);

assign empty_53_fu_548_p2 = (and_ln151_fu_528_p2 | and_ln150_1_fu_452_p2);

assign empty_54_fu_554_p2 = (icmp_ln151_fu_397_p2 | empty_53_fu_548_p2);

assign empty_55_fu_600_p2 = (zext_ln150_1_fu_596_p1 + zext_ln104_cast_reg_841);

assign empty_56_fu_629_p2 = (p_shl_fu_613_p1 + p_shl17_fu_625_p1);

assign empty_57_fu_644_p2 = (tmp6_fu_639_p2 + p_cast44_cast_reg_836);

assign empty_fu_677_p1 = select_ln151_2_fu_534_p3[11:0];

assign first_iter_10343_fu_410_p2 = ((ic2_fu_132 == 31'd0) ? 1'b1 : 1'b0);

assign first_iter_10_mid1_fu_490_p2 = ((add_ln151_fu_470_p2 == 31'd0) ? 1'b1 : 1'b0);

assign first_iter_8_fu_590_p2 = ((kc_mid2_fu_560_p3 == 2'd0) ? 1'b1 : 1'b0);

assign first_iter_9346_fu_422_p2 = ((kr_fu_124 == 2'd0) ? 1'b1 : 1'b0);

assign first_iter_9_mid1_fu_568_p2 = ((add_ln152_fu_542_p2 == 2'd0) ? 1'b1 : 1'b0);

assign first_iter_9_mid2_fu_574_p3 = ((and_ln151_fu_528_p2[0:0] == 1'b1) ? first_iter_9_mid1_fu_568_p2 : or_ln151_1_fu_504_p2);

assign icmp_ln150_fu_368_p2 = ((indvar_flatten158_fu_144 == mul_ln131_1) ? 1'b1 : 1'b0);

assign icmp_ln151_fu_397_p2 = ((indvar_flatten129_fu_136 == mul_ln131) ? 1'b1 : 1'b0);

assign icmp_ln152_fu_446_p2 = ((indvar_flatten113_fu_128 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln153_fu_440_p2 = ((kc_fu_120 == 2'd3) ? 1'b1 : 1'b0);

assign kc_mid2_fu_560_p3 = ((empty_54_fu_554_p2[0:0] == 1'b1) ? 2'd0 : kc_fu_120);

assign localW_1_address0 = p_cast_fu_760_p1;

assign localW_1_ce0 = localW_1_ce0_local;

assign localW_1_d0 = bitcast_ln155_reg_886;

assign localW_1_we0 = localW_1_we0_local;

assign localW_2_address0 = p_cast_fu_760_p1;

assign localW_2_ce0 = localW_2_ce0_local;

assign localW_2_d0 = bitcast_ln155_reg_886;

assign localW_2_we0 = localW_2_we0_local;

assign localW_3_address0 = p_cast_fu_760_p1;

assign localW_3_ce0 = localW_3_ce0_local;

assign localW_3_d0 = bitcast_ln155_reg_886;

assign localW_3_we0 = localW_3_we0_local;

assign localW_4_address0 = p_cast_fu_760_p1;

assign localW_4_ce0 = localW_4_ce0_local;

assign localW_4_d0 = bitcast_ln155_reg_886;

assign localW_4_we0 = localW_4_we0_local;

assign localW_5_address0 = p_cast_fu_760_p1;

assign localW_5_ce0 = localW_5_ce0_local;

assign localW_5_d0 = bitcast_ln155_reg_886;

assign localW_5_we0 = localW_5_we0_local;

assign localW_6_address0 = p_cast_fu_760_p1;

assign localW_6_ce0 = localW_6_ce0_local;

assign localW_6_d0 = bitcast_ln155_reg_886;

assign localW_6_we0 = localW_6_we0_local;

assign localW_7_address0 = p_cast_fu_760_p1;

assign localW_7_ce0 = localW_7_ce0_local;

assign localW_7_d0 = bitcast_ln155_reg_886;

assign localW_7_we0 = localW_7_we0_local;

assign localW_8_address0 = p_cast_fu_760_p1;

assign localW_8_ce0 = localW_8_ce0_local;

assign localW_8_d0 = bitcast_ln155_reg_886;

assign localW_8_we0 = localW_8_we0_local;

assign localW_address0 = p_cast_fu_760_p1;

assign localW_ce0 = localW_ce0_local;

assign localW_d0 = bitcast_ln155_reg_886;

assign localW_we0 = localW_we0_local;

assign m_axi_mem1_ARADDR = mem1_addr_reg_875;

assign m_axi_mem1_ARBURST = 2'd0;

assign m_axi_mem1_ARCACHE = 4'd0;

assign m_axi_mem1_ARID = 1'd0;

assign m_axi_mem1_ARLEN = zext_ln150_cast_reg_846;

assign m_axi_mem1_ARLOCK = 2'd0;

assign m_axi_mem1_ARPROT = 3'd0;

assign m_axi_mem1_ARQOS = 4'd0;

assign m_axi_mem1_ARREGION = 4'd0;

assign m_axi_mem1_ARSIZE = 3'd0;

assign m_axi_mem1_ARUSER = 1'd0;

assign m_axi_mem1_AWADDR = 64'd0;

assign m_axi_mem1_AWBURST = 2'd0;

assign m_axi_mem1_AWCACHE = 4'd0;

assign m_axi_mem1_AWID = 1'd0;

assign m_axi_mem1_AWLEN = 32'd0;

assign m_axi_mem1_AWLOCK = 2'd0;

assign m_axi_mem1_AWPROT = 3'd0;

assign m_axi_mem1_AWQOS = 4'd0;

assign m_axi_mem1_AWREGION = 4'd0;

assign m_axi_mem1_AWSIZE = 3'd0;

assign m_axi_mem1_AWUSER = 1'd0;

assign m_axi_mem1_AWVALID = 1'b0;

assign m_axi_mem1_BREADY = 1'b0;

assign m_axi_mem1_WDATA = 32'd0;

assign m_axi_mem1_WID = 1'd0;

assign m_axi_mem1_WLAST = 1'b0;

assign m_axi_mem1_WSTRB = 4'd0;

assign m_axi_mem1_WUSER = 1'd0;

assign m_axi_mem1_WVALID = 1'b0;

assign or_ln150_1_fu_428_p2 = (icmp_ln151_fu_397_p2 | first_iter_9346_fu_422_p2);

assign or_ln150_fu_416_p2 = (icmp_ln151_fu_397_p2 | first_iter_10343_fu_410_p2);

assign or_ln151_1_fu_504_p2 = (or_ln150_1_fu_428_p2 | and_ln150_1_fu_452_p2);

assign or_ln151_2_fu_516_p2 = (xor_ln151_fu_510_p2 | icmp_ln151_fu_397_p2);

assign or_ln151_fu_476_p2 = (icmp_ln151_fu_397_p2 | and_ln150_1_fu_452_p2);

assign p_cast44_cast_fu_312_p1 = p_cast44;

assign p_cast49_fu_635_p1 = empty_56_fu_629_p2;

assign p_cast_fu_760_p1 = empty_50_reg_881_pp0_iter10_reg;

assign p_shl17_fu_625_p1 = tmp_5_fu_617_p3;

assign p_shl_fu_613_p1 = tmp_fu_605_p3;

assign select_ln150_1_fu_458_p3 = ((icmp_ln151_fu_397_p2[0:0] == 1'b1) ? add_ln150_fu_391_p2 : oc2_fu_140);

assign select_ln150_fu_402_p3 = ((icmp_ln151_fu_397_p2[0:0] == 1'b1) ? 31'd0 : ic2_fu_132);

assign select_ln151_1_fu_496_p3 = ((and_ln150_1_fu_452_p2[0:0] == 1'b1) ? first_iter_10_mid1_fu_490_p2 : or_ln150_fu_416_p2);

assign select_ln151_2_fu_534_p3 = ((and_ln150_1_fu_452_p2[0:0] == 1'b1) ? add_ln151_fu_470_p2 : select_ln150_fu_402_p3);

assign select_ln151_3_fu_713_p3 = ((icmp_ln151_fu_397_p2[0:0] == 1'b1) ? 36'd1 : add_ln151_1_fu_707_p2);

assign select_ln151_fu_482_p3 = ((or_ln151_fu_476_p2[0:0] == 1'b1) ? 2'd0 : kr_fu_124);

assign select_ln152_1_fu_699_p3 = ((or_ln151_fu_476_p2[0:0] == 1'b1) ? 4'd1 : add_ln152_1_fu_693_p2);

assign select_ln152_fu_582_p3 = ((and_ln151_fu_528_p2[0:0] == 1'b1) ? add_ln152_fu_542_p2 : select_ln151_fu_482_p3);

assign sext_ln151_fu_659_p1 = $signed(trunc_ln3_fu_649_p4);

assign tmp6_fu_639_p2 = (p_cast49_fu_635_p1 + weight);

assign tmp_5_fu_617_p3 = {{empty_55_fu_600_p2}, {10'd0}};

assign tmp_fu_605_p3 = {{empty_55_fu_600_p2}, {13'd0}};

assign tmp_s_fu_669_p3 = {{trunc_ln151_fu_466_p1}, {6'd0}};

assign trunc_ln151_fu_466_p1 = select_ln150_1_fu_458_p3[5:0];

assign trunc_ln3_fu_649_p4 = {{empty_57_fu_644_p2[63:2]}};

assign xor_ln150_fu_434_p2 = (icmp_ln151_fu_397_p2 ^ 1'd1);

assign xor_ln151_fu_510_p2 = (icmp_ln152_fu_446_p2 ^ 1'd1);

assign zext_ln104_cast_fu_316_p1 = zext_ln104;

assign zext_ln150_1_fu_596_p1 = select_ln150_1_fu_458_p3;

assign zext_ln150_cast_fu_320_p1 = zext_ln150;

always @ (posedge ap_clk) begin
    p_cast44_cast_reg_836[63:38] <= 26'b00000000000000000000000000;
    zext_ln104_cast_reg_841[32] <= 1'b0;
    zext_ln150_cast_reg_846[63:35] <= 29'b00000000000000000000000000000;
end

endmodule //conv_via_tiling_conv_via_tiling_Pipeline_VITIS_LOOP_150_17_VITIS_LOOP_151_18_VITIS_LOOP_152_19_V
