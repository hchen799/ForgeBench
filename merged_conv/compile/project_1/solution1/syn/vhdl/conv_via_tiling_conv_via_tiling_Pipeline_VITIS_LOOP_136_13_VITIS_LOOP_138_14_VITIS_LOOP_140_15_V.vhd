-- ==============================================================
-- Generated by Vitis HLS v2024.1.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv_via_tiling_conv_via_tiling_Pipeline_VITIS_LOOP_136_13_VITIS_LOOP_138_14_VITIS_LOOP_140_15_V is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    localW_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    localW_ce0 : OUT STD_LOGIC;
    localW_we0 : OUT STD_LOGIC;
    localW_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localW_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    localW_1_ce0 : OUT STD_LOGIC;
    localW_1_we0 : OUT STD_LOGIC;
    localW_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localW_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    localW_2_ce0 : OUT STD_LOGIC;
    localW_2_we0 : OUT STD_LOGIC;
    localW_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localW_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    localW_3_ce0 : OUT STD_LOGIC;
    localW_3_we0 : OUT STD_LOGIC;
    localW_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localW_4_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    localW_4_ce0 : OUT STD_LOGIC;
    localW_4_we0 : OUT STD_LOGIC;
    localW_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localW_5_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    localW_5_ce0 : OUT STD_LOGIC;
    localW_5_we0 : OUT STD_LOGIC;
    localW_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localW_6_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    localW_6_ce0 : OUT STD_LOGIC;
    localW_6_we0 : OUT STD_LOGIC;
    localW_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localW_7_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    localW_7_ce0 : OUT STD_LOGIC;
    localW_7_we0 : OUT STD_LOGIC;
    localW_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localW_8_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    localW_8_ce0 : OUT STD_LOGIC;
    localW_8_we0 : OUT STD_LOGIC;
    localW_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of conv_via_tiling_conv_via_tiling_Pipeline_VITIS_LOOP_136_13_VITIS_LOOP_138_14_VITIS_LOOP_140_15_V is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv16_9000 : STD_LOGIC_VECTOR (15 downto 0) := "1001000000000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv11_240 : STD_LOGIC_VECTOR (10 downto 0) := "01001000000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln136_fu_272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal p_cast_fu_456_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal k_j_fu_74 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal add_ln142_fu_469_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_loop_init : STD_LOGIC;
    signal k_i_fu_78 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal select_ln140_fu_430_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten70_fu_82 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal select_ln140_1_fu_481_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal block_in_ch_j_fu_86 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    signal select_ln138_fu_396_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar_flatten83_fu_90 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    signal select_ln138_1_fu_495_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal block_out_ch_j_fu_94 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    signal select_ln136_1_fu_340_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar_flatten106_fu_98 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal add_ln136_1_fu_278_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal localW_4_we0_local : STD_LOGIC;
    signal k_j_mid2_fu_422_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal localW_4_ce0_local : STD_LOGIC;
    signal localW_3_we0_local : STD_LOGIC;
    signal localW_3_ce0_local : STD_LOGIC;
    signal localW_5_we0_local : STD_LOGIC;
    signal localW_5_ce0_local : STD_LOGIC;
    signal localW_1_we0_local : STD_LOGIC;
    signal localW_1_ce0_local : STD_LOGIC;
    signal localW_we0_local : STD_LOGIC;
    signal localW_ce0_local : STD_LOGIC;
    signal localW_2_we0_local : STD_LOGIC;
    signal localW_2_ce0_local : STD_LOGIC;
    signal localW_7_we0_local : STD_LOGIC;
    signal localW_7_ce0_local : STD_LOGIC;
    signal localW_6_we0_local : STD_LOGIC;
    signal localW_6_ce0_local : STD_LOGIC;
    signal localW_8_we0_local : STD_LOGIC;
    signal localW_8_ce0_local : STD_LOGIC;
    signal icmp_ln138_fu_302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln140_fu_328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln136_fu_316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln136_fu_296_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln136_fu_308_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal and_ln136_1_fu_334_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_fu_358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten72_not_fu_372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten72_mid2105_fu_378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln136_fu_384_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln142_fu_322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln138_fu_352_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal k_i_mid277_fu_364_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln142_mid282_fu_390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_58_fu_410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_59_fu_416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln140_fu_404_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln138_fu_348_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_fu_438_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln138_cast_fu_446_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_60_fu_450_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln140_1_fu_475_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln138_1_fu_489_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component conv_via_tiling_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component conv_via_tiling_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    block_in_ch_j_fu_86_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    block_in_ch_j_fu_86 <= ap_const_lv7_0;
                elsif (((icmp_ln136_fu_272_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    block_in_ch_j_fu_86 <= select_ln138_fu_396_p3;
                end if;
            end if; 
        end if;
    end process;

    block_out_ch_j_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    block_out_ch_j_fu_94 <= ap_const_lv7_0;
                elsif (((icmp_ln136_fu_272_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    block_out_ch_j_fu_94 <= select_ln136_1_fu_340_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten106_fu_98_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten106_fu_98 <= ap_const_lv16_0;
                elsif (((icmp_ln136_fu_272_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten106_fu_98 <= add_ln136_1_fu_278_p2;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten70_fu_82_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten70_fu_82 <= ap_const_lv4_0;
                elsif (((icmp_ln136_fu_272_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten70_fu_82 <= select_ln140_1_fu_481_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten83_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten83_fu_90 <= ap_const_lv11_0;
                elsif (((icmp_ln136_fu_272_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten83_fu_90 <= select_ln138_1_fu_495_p3;
                end if;
            end if; 
        end if;
    end process;

    k_i_fu_78_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    k_i_fu_78 <= ap_const_lv2_0;
                elsif (((icmp_ln136_fu_272_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    k_i_fu_78 <= select_ln140_fu_430_p3;
                end if;
            end if; 
        end if;
    end process;

    k_j_fu_74_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    k_j_fu_74 <= ap_const_lv2_0;
                elsif (((icmp_ln136_fu_272_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    k_j_fu_74 <= add_ln142_fu_469_p2;
                end if;
            end if; 
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln136_1_fu_278_p2 <= std_logic_vector(unsigned(indvar_flatten106_fu_98) + unsigned(ap_const_lv16_1));
    add_ln136_fu_296_p2 <= std_logic_vector(unsigned(block_out_ch_j_fu_94) + unsigned(ap_const_lv7_1));
    add_ln138_1_fu_489_p2 <= std_logic_vector(unsigned(indvar_flatten83_fu_90) + unsigned(ap_const_lv11_1));
    add_ln138_fu_352_p2 <= std_logic_vector(unsigned(select_ln136_fu_308_p3) + unsigned(ap_const_lv7_1));
    add_ln140_1_fu_475_p2 <= std_logic_vector(unsigned(indvar_flatten70_fu_82) + unsigned(ap_const_lv4_1));
    add_ln140_fu_404_p2 <= std_logic_vector(unsigned(k_i_mid277_fu_364_p3) + unsigned(ap_const_lv2_1));
    add_ln142_fu_469_p2 <= std_logic_vector(unsigned(k_j_mid2_fu_422_p3) + unsigned(ap_const_lv2_1));
    and_ln136_1_fu_334_p2 <= (xor_ln136_fu_316_p2 and icmp_ln140_fu_328_p2);
    and_ln136_fu_384_p2 <= (xor_ln136_fu_316_p2 and not_exitcond_flatten72_mid2105_fu_378_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln136_fu_272_p2)
    begin
        if (((icmp_ln136_fu_272_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;
    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    empty_58_fu_410_p2 <= (icmp_ln142_mid282_fu_390_p2 or and_ln136_1_fu_334_p2);
    empty_59_fu_416_p2 <= (icmp_ln138_fu_302_p2 or empty_58_fu_410_p2);
    empty_60_fu_450_p2 <= std_logic_vector(unsigned(tmp_s_fu_438_p3) + unsigned(select_ln138_cast_fu_446_p1));
    empty_fu_358_p2 <= (icmp_ln138_fu_302_p2 or and_ln136_1_fu_334_p2);
    exitcond_flatten72_not_fu_372_p2 <= (icmp_ln140_fu_328_p2 xor ap_const_lv1_1);
    icmp_ln136_fu_272_p2 <= "1" when (indvar_flatten106_fu_98 = ap_const_lv16_9000) else "0";
    icmp_ln138_fu_302_p2 <= "1" when (indvar_flatten83_fu_90 = ap_const_lv11_240) else "0";
    icmp_ln140_fu_328_p2 <= "1" when (indvar_flatten70_fu_82 = ap_const_lv4_9) else "0";
    icmp_ln142_fu_322_p2 <= "1" when (k_j_fu_74 = ap_const_lv2_3) else "0";
    icmp_ln142_mid282_fu_390_p2 <= (icmp_ln142_fu_322_p2 and and_ln136_fu_384_p2);
    k_i_mid277_fu_364_p3 <= 
        ap_const_lv2_0 when (empty_fu_358_p2(0) = '1') else 
        k_i_fu_78;
    k_j_mid2_fu_422_p3 <= 
        ap_const_lv2_0 when (empty_59_fu_416_p2(0) = '1') else 
        k_j_fu_74;
    localW_1_address0 <= p_cast_fu_456_p1(12 - 1 downto 0);
    localW_1_ce0 <= localW_1_ce0_local;

    localW_1_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localW_1_ce0_local <= ap_const_logic_1;
        else 
            localW_1_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    localW_1_d0 <= ap_const_lv32_0;
    localW_1_we0 <= localW_1_we0_local;

    localW_1_we0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln136_fu_272_p2, ap_block_pp0_stage0_11001, select_ln140_fu_430_p3, k_j_mid2_fu_422_p3)
    begin
        if (((icmp_ln136_fu_272_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (k_j_mid2_fu_422_p3 = ap_const_lv2_1) and (select_ln140_fu_430_p3 = ap_const_lv2_0))) then 
            localW_1_we0_local <= ap_const_logic_1;
        else 
            localW_1_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    localW_2_address0 <= p_cast_fu_456_p1(12 - 1 downto 0);
    localW_2_ce0 <= localW_2_ce0_local;

    localW_2_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localW_2_ce0_local <= ap_const_logic_1;
        else 
            localW_2_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    localW_2_d0 <= ap_const_lv32_0;
    localW_2_we0 <= localW_2_we0_local;

    localW_2_we0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln136_fu_272_p2, ap_block_pp0_stage0_11001, select_ln140_fu_430_p3, k_j_mid2_fu_422_p3)
    begin
        if ((not((k_j_mid2_fu_422_p3 = ap_const_lv2_0)) and not((k_j_mid2_fu_422_p3 = ap_const_lv2_1)) and (icmp_ln136_fu_272_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln140_fu_430_p3 = ap_const_lv2_0))) then 
            localW_2_we0_local <= ap_const_logic_1;
        else 
            localW_2_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    localW_3_address0 <= p_cast_fu_456_p1(12 - 1 downto 0);
    localW_3_ce0 <= localW_3_ce0_local;

    localW_3_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localW_3_ce0_local <= ap_const_logic_1;
        else 
            localW_3_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    localW_3_d0 <= ap_const_lv32_0;
    localW_3_we0 <= localW_3_we0_local;

    localW_3_we0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln136_fu_272_p2, ap_block_pp0_stage0_11001, select_ln140_fu_430_p3, k_j_mid2_fu_422_p3)
    begin
        if (((icmp_ln136_fu_272_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (k_j_mid2_fu_422_p3 = ap_const_lv2_0) and (select_ln140_fu_430_p3 = ap_const_lv2_1))) then 
            localW_3_we0_local <= ap_const_logic_1;
        else 
            localW_3_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    localW_4_address0 <= p_cast_fu_456_p1(12 - 1 downto 0);
    localW_4_ce0 <= localW_4_ce0_local;

    localW_4_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localW_4_ce0_local <= ap_const_logic_1;
        else 
            localW_4_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    localW_4_d0 <= ap_const_lv32_0;
    localW_4_we0 <= localW_4_we0_local;

    localW_4_we0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln136_fu_272_p2, ap_block_pp0_stage0_11001, select_ln140_fu_430_p3, k_j_mid2_fu_422_p3)
    begin
        if (((icmp_ln136_fu_272_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (k_j_mid2_fu_422_p3 = ap_const_lv2_1) and (select_ln140_fu_430_p3 = ap_const_lv2_1))) then 
            localW_4_we0_local <= ap_const_logic_1;
        else 
            localW_4_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    localW_5_address0 <= p_cast_fu_456_p1(12 - 1 downto 0);
    localW_5_ce0 <= localW_5_ce0_local;

    localW_5_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localW_5_ce0_local <= ap_const_logic_1;
        else 
            localW_5_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    localW_5_d0 <= ap_const_lv32_0;
    localW_5_we0 <= localW_5_we0_local;

    localW_5_we0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln136_fu_272_p2, ap_block_pp0_stage0_11001, select_ln140_fu_430_p3, k_j_mid2_fu_422_p3)
    begin
        if ((not((k_j_mid2_fu_422_p3 = ap_const_lv2_0)) and not((k_j_mid2_fu_422_p3 = ap_const_lv2_1)) and (icmp_ln136_fu_272_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln140_fu_430_p3 = ap_const_lv2_1))) then 
            localW_5_we0_local <= ap_const_logic_1;
        else 
            localW_5_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    localW_6_address0 <= p_cast_fu_456_p1(12 - 1 downto 0);
    localW_6_ce0 <= localW_6_ce0_local;

    localW_6_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localW_6_ce0_local <= ap_const_logic_1;
        else 
            localW_6_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    localW_6_d0 <= ap_const_lv32_0;
    localW_6_we0 <= localW_6_we0_local;

    localW_6_we0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln136_fu_272_p2, ap_block_pp0_stage0_11001, select_ln140_fu_430_p3, k_j_mid2_fu_422_p3)
    begin
        if ((not((select_ln140_fu_430_p3 = ap_const_lv2_0)) and not((select_ln140_fu_430_p3 = ap_const_lv2_1)) and (icmp_ln136_fu_272_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (k_j_mid2_fu_422_p3 = ap_const_lv2_0))) then 
            localW_6_we0_local <= ap_const_logic_1;
        else 
            localW_6_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    localW_7_address0 <= p_cast_fu_456_p1(12 - 1 downto 0);
    localW_7_ce0 <= localW_7_ce0_local;

    localW_7_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localW_7_ce0_local <= ap_const_logic_1;
        else 
            localW_7_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    localW_7_d0 <= ap_const_lv32_0;
    localW_7_we0 <= localW_7_we0_local;

    localW_7_we0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln136_fu_272_p2, ap_block_pp0_stage0_11001, select_ln140_fu_430_p3, k_j_mid2_fu_422_p3)
    begin
        if ((not((select_ln140_fu_430_p3 = ap_const_lv2_0)) and not((select_ln140_fu_430_p3 = ap_const_lv2_1)) and (icmp_ln136_fu_272_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (k_j_mid2_fu_422_p3 = ap_const_lv2_1))) then 
            localW_7_we0_local <= ap_const_logic_1;
        else 
            localW_7_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    localW_8_address0 <= p_cast_fu_456_p1(12 - 1 downto 0);
    localW_8_ce0 <= localW_8_ce0_local;

    localW_8_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localW_8_ce0_local <= ap_const_logic_1;
        else 
            localW_8_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    localW_8_d0 <= ap_const_lv32_0;
    localW_8_we0 <= localW_8_we0_local;

    localW_8_we0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln136_fu_272_p2, ap_block_pp0_stage0_11001, select_ln140_fu_430_p3, k_j_mid2_fu_422_p3)
    begin
        if ((not((select_ln140_fu_430_p3 = ap_const_lv2_0)) and not((k_j_mid2_fu_422_p3 = ap_const_lv2_0)) and not((k_j_mid2_fu_422_p3 = ap_const_lv2_1)) and not((select_ln140_fu_430_p3 = ap_const_lv2_1)) and (icmp_ln136_fu_272_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localW_8_we0_local <= ap_const_logic_1;
        else 
            localW_8_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    localW_address0 <= p_cast_fu_456_p1(12 - 1 downto 0);
    localW_ce0 <= localW_ce0_local;

    localW_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localW_ce0_local <= ap_const_logic_1;
        else 
            localW_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    localW_d0 <= ap_const_lv32_0;
    localW_we0 <= localW_we0_local;

    localW_we0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln136_fu_272_p2, ap_block_pp0_stage0_11001, select_ln140_fu_430_p3, k_j_mid2_fu_422_p3)
    begin
        if (((icmp_ln136_fu_272_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (k_j_mid2_fu_422_p3 = ap_const_lv2_0) and (select_ln140_fu_430_p3 = ap_const_lv2_0))) then 
            localW_we0_local <= ap_const_logic_1;
        else 
            localW_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    not_exitcond_flatten72_mid2105_fu_378_p2 <= (icmp_ln138_fu_302_p2 or exitcond_flatten72_not_fu_372_p2);
    p_cast_fu_456_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_60_fu_450_p2),64));
    select_ln136_1_fu_340_p3 <= 
        add_ln136_fu_296_p2 when (icmp_ln138_fu_302_p2(0) = '1') else 
        block_out_ch_j_fu_94;
    select_ln136_fu_308_p3 <= 
        ap_const_lv7_0 when (icmp_ln138_fu_302_p2(0) = '1') else 
        block_in_ch_j_fu_86;
    select_ln138_1_fu_495_p3 <= 
        ap_const_lv11_1 when (icmp_ln138_fu_302_p2(0) = '1') else 
        add_ln138_1_fu_489_p2;
    select_ln138_cast_fu_446_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln138_fu_396_p3),12));
    select_ln138_fu_396_p3 <= 
        add_ln138_fu_352_p2 when (and_ln136_1_fu_334_p2(0) = '1') else 
        select_ln136_fu_308_p3;
    select_ln140_1_fu_481_p3 <= 
        ap_const_lv4_1 when (empty_fu_358_p2(0) = '1') else 
        add_ln140_1_fu_475_p2;
    select_ln140_fu_430_p3 <= 
        add_ln140_fu_404_p2 when (icmp_ln142_mid282_fu_390_p2(0) = '1') else 
        k_i_mid277_fu_364_p3;
    tmp_s_fu_438_p3 <= (trunc_ln138_fu_348_p1 & ap_const_lv6_0);
    trunc_ln138_fu_348_p1 <= select_ln136_1_fu_340_p3(6 - 1 downto 0);
    xor_ln136_fu_316_p2 <= (icmp_ln138_fu_302_p2 xor ap_const_lv1_1);
end behav;
