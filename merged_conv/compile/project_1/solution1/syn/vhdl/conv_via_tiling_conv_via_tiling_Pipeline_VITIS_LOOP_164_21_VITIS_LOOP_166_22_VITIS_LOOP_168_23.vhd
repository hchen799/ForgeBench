-- ==============================================================
-- Generated by Vitis HLS v2024.1.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv_via_tiling_conv_via_tiling_Pipeline_VITIS_LOOP_164_21_VITIS_LOOP_166_22_VITIS_LOOP_168_23 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    localIn_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    localIn_ce0 : OUT STD_LOGIC;
    localIn_we0 : OUT STD_LOGIC;
    localIn_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localIn_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    localIn_1_ce0 : OUT STD_LOGIC;
    localIn_1_we0 : OUT STD_LOGIC;
    localIn_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localIn_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    localIn_2_ce0 : OUT STD_LOGIC;
    localIn_2_we0 : OUT STD_LOGIC;
    localIn_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localIn_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    localIn_3_ce0 : OUT STD_LOGIC;
    localIn_3_we0 : OUT STD_LOGIC;
    localIn_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localIn_4_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    localIn_4_ce0 : OUT STD_LOGIC;
    localIn_4_we0 : OUT STD_LOGIC;
    localIn_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localIn_5_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    localIn_5_ce0 : OUT STD_LOGIC;
    localIn_5_we0 : OUT STD_LOGIC;
    localIn_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localIn_6_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    localIn_6_ce0 : OUT STD_LOGIC;
    localIn_6_we0 : OUT STD_LOGIC;
    localIn_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localIn_7_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    localIn_7_ce0 : OUT STD_LOGIC;
    localIn_7_we0 : OUT STD_LOGIC;
    localIn_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localIn_8_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    localIn_8_ce0 : OUT STD_LOGIC;
    localIn_8_we0 : OUT STD_LOGIC;
    localIn_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of conv_via_tiling_conv_via_tiling_Pipeline_VITIS_LOOP_164_21_VITIS_LOOP_166_22_VITIS_LOOP_168_23 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv16_8440 : STD_LOGIC_VECTOR (15 downto 0) := "1000010001000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv10_211 : STD_LOGIC_VECTOR (9 downto 0) := "1000010001";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv11_2B : STD_LOGIC_VECTOR (10 downto 0) := "00000101011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln164_fu_261_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln166_fu_279_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln166_reg_550 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln166_reg_550_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln166_reg_550_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln166_reg_550_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln166_reg_550_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln166_reg_550_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln166_reg_550_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln166_reg_550_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal block_in_w_k_mid2_fu_323_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln166_fu_331_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_reg_565 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_reg_565_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_reg_565_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_reg_565_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_reg_565_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_reg_565_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_reg_565_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_reg_565_pp0_iter8_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_4_reg_570 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_4_reg_570_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_4_reg_570_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_4_reg_570_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_4_reg_570_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_4_reg_570_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_4_reg_570_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_4_reg_570_pp0_iter8_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln170_2_fu_489_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal block_in_w_k_fu_84 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal add_ln168_fu_391_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal block_in_h_k_fu_88 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal indvar_flatten165_fu_92 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal select_ln166_1_fu_403_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal block_in_ch_k_fu_96 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    signal select_ln164_1_fu_440_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar_flatten178_fu_100 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal add_ln164_1_fu_267_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal localIn_4_we0_local : STD_LOGIC;
    signal trunc_ln166_1_fu_476_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln168_fu_502_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal localIn_4_ce0_local : STD_LOGIC;
    signal localIn_3_we0_local : STD_LOGIC;
    signal localIn_3_ce0_local : STD_LOGIC;
    signal localIn_5_we0_local : STD_LOGIC;
    signal localIn_5_ce0_local : STD_LOGIC;
    signal localIn_1_we0_local : STD_LOGIC;
    signal localIn_1_ce0_local : STD_LOGIC;
    signal localIn_we0_local : STD_LOGIC;
    signal localIn_ce0_local : STD_LOGIC;
    signal localIn_2_we0_local : STD_LOGIC;
    signal localIn_2_ce0_local : STD_LOGIC;
    signal localIn_7_we0_local : STD_LOGIC;
    signal localIn_7_ce0_local : STD_LOGIC;
    signal localIn_6_we0_local : STD_LOGIC;
    signal localIn_6_ce0_local : STD_LOGIC;
    signal localIn_8_we0_local : STD_LOGIC;
    signal localIn_8_ce0_local : STD_LOGIC;
    signal icmp_ln168_fu_299_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln164_fu_293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln164_fu_285_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln164_fu_305_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_fu_317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln166_fu_311_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln166_fu_343_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln166_fu_343_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln166_fu_343_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_359_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul_ln168_fu_369_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln168_fu_369_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln168_fu_369_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_385_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln166_1_fu_397_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln164_fu_434_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln166_fu_447_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_fu_451_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln170_fu_459_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln170_fu_462_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_359_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_fu_468_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln170_1_fu_480_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln170_1_fu_483_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_385_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal mul_ln166_fu_343_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln168_fu_369_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component conv_via_tiling_mul_5ns_7ns_11_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component conv_via_tiling_urem_5ns_3ns_2_9_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component conv_via_tiling_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_5ns_7ns_11_1_1_U53 : component conv_via_tiling_mul_5ns_7ns_11_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 7,
        dout_WIDTH => 11)
    port map (
        din0 => mul_ln166_fu_343_p0,
        din1 => mul_ln166_fu_343_p1,
        dout => mul_ln166_fu_343_p2);

    urem_5ns_3ns_2_9_1_U54 : component conv_via_tiling_urem_5ns_3ns_2_9_1
    generic map (
        ID => 1,
        NUM_STAGE => 9,
        din0_WIDTH => 5,
        din1_WIDTH => 3,
        dout_WIDTH => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => select_ln166_fu_331_p3,
        din1 => grp_fu_359_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_359_p2);

    mul_5ns_7ns_11_1_1_U55 : component conv_via_tiling_mul_5ns_7ns_11_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 7,
        dout_WIDTH => 11)
    port map (
        din0 => mul_ln168_fu_369_p0,
        din1 => mul_ln168_fu_369_p1,
        dout => mul_ln168_fu_369_p2);

    urem_5ns_3ns_2_9_1_U56 : component conv_via_tiling_urem_5ns_3ns_2_9_1
    generic map (
        ID => 1,
        NUM_STAGE => 9,
        din0_WIDTH => 5,
        din1_WIDTH => 3,
        dout_WIDTH => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => block_in_w_k_mid2_fu_323_p3,
        din1 => grp_fu_385_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_385_p2);

    flow_control_loop_pipe_sequential_init_U : component conv_via_tiling_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter8_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    block_in_ch_k_fu_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    block_in_ch_k_fu_96 <= ap_const_lv7_0;
                elsif ((ap_enable_reg_pp0_iter9 = ap_const_logic_1)) then 
                    block_in_ch_k_fu_96 <= select_ln164_1_fu_440_p3;
                end if;
            end if; 
        end if;
    end process;

    block_in_h_k_fu_88_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    block_in_h_k_fu_88 <= ap_const_lv5_0;
                elsif (((icmp_ln164_fu_261_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    block_in_h_k_fu_88 <= select_ln166_fu_331_p3;
                end if;
            end if; 
        end if;
    end process;

    block_in_w_k_fu_84_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    block_in_w_k_fu_84 <= ap_const_lv5_0;
                elsif (((icmp_ln164_fu_261_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    block_in_w_k_fu_84 <= add_ln168_fu_391_p2;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten165_fu_92_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten165_fu_92 <= ap_const_lv10_0;
                elsif (((icmp_ln164_fu_261_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten165_fu_92 <= select_ln166_1_fu_403_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten178_fu_100_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten178_fu_100 <= ap_const_lv16_0;
                elsif (((icmp_ln164_fu_261_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten178_fu_100 <= add_ln164_1_fu_267_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
                icmp_ln166_reg_550 <= icmp_ln166_fu_279_p2;
                tmp_4_reg_570 <= mul_ln168_fu_369_p2(10 downto 7);
                tmp_reg_565 <= mul_ln166_fu_343_p2(10 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                icmp_ln166_reg_550_pp0_iter2_reg <= icmp_ln166_reg_550;
                icmp_ln166_reg_550_pp0_iter3_reg <= icmp_ln166_reg_550_pp0_iter2_reg;
                icmp_ln166_reg_550_pp0_iter4_reg <= icmp_ln166_reg_550_pp0_iter3_reg;
                icmp_ln166_reg_550_pp0_iter5_reg <= icmp_ln166_reg_550_pp0_iter4_reg;
                icmp_ln166_reg_550_pp0_iter6_reg <= icmp_ln166_reg_550_pp0_iter5_reg;
                icmp_ln166_reg_550_pp0_iter7_reg <= icmp_ln166_reg_550_pp0_iter6_reg;
                icmp_ln166_reg_550_pp0_iter8_reg <= icmp_ln166_reg_550_pp0_iter7_reg;
                tmp_4_reg_570_pp0_iter2_reg <= tmp_4_reg_570;
                tmp_4_reg_570_pp0_iter3_reg <= tmp_4_reg_570_pp0_iter2_reg;
                tmp_4_reg_570_pp0_iter4_reg <= tmp_4_reg_570_pp0_iter3_reg;
                tmp_4_reg_570_pp0_iter5_reg <= tmp_4_reg_570_pp0_iter4_reg;
                tmp_4_reg_570_pp0_iter6_reg <= tmp_4_reg_570_pp0_iter5_reg;
                tmp_4_reg_570_pp0_iter7_reg <= tmp_4_reg_570_pp0_iter6_reg;
                tmp_4_reg_570_pp0_iter8_reg <= tmp_4_reg_570_pp0_iter7_reg;
                tmp_reg_565_pp0_iter2_reg <= tmp_reg_565;
                tmp_reg_565_pp0_iter3_reg <= tmp_reg_565_pp0_iter2_reg;
                tmp_reg_565_pp0_iter4_reg <= tmp_reg_565_pp0_iter3_reg;
                tmp_reg_565_pp0_iter5_reg <= tmp_reg_565_pp0_iter4_reg;
                tmp_reg_565_pp0_iter6_reg <= tmp_reg_565_pp0_iter5_reg;
                tmp_reg_565_pp0_iter7_reg <= tmp_reg_565_pp0_iter6_reg;
                tmp_reg_565_pp0_iter8_reg <= tmp_reg_565_pp0_iter7_reg;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln164_1_fu_267_p2 <= std_logic_vector(unsigned(indvar_flatten178_fu_100) + unsigned(ap_const_lv16_1));
    add_ln164_fu_434_p2 <= std_logic_vector(unsigned(block_in_ch_k_fu_96) + unsigned(ap_const_lv7_1));
    add_ln166_1_fu_397_p2 <= std_logic_vector(unsigned(indvar_flatten165_fu_92) + unsigned(ap_const_lv10_1));
    add_ln166_fu_311_p2 <= std_logic_vector(unsigned(select_ln164_fu_285_p3) + unsigned(ap_const_lv5_1));
    add_ln168_fu_391_p2 <= std_logic_vector(unsigned(block_in_w_k_mid2_fu_323_p3) + unsigned(ap_const_lv5_1));
    add_ln170_1_fu_483_p2 <= std_logic_vector(unsigned(tmp_3_fu_468_p3) + unsigned(zext_ln170_1_fu_480_p1));
    add_ln170_fu_462_p2 <= std_logic_vector(unsigned(tmp_s_fu_451_p3) + unsigned(zext_ln170_fu_459_p1));
    and_ln164_fu_305_p2 <= (xor_ln164_fu_293_p2 and icmp_ln168_fu_299_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln164_fu_261_p2)
    begin
        if (((icmp_ln164_fu_261_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter8_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter8_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;
    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    block_in_w_k_mid2_fu_323_p3 <= 
        ap_const_lv5_0 when (empty_fu_317_p2(0) = '1') else 
        block_in_w_k_fu_84;
    empty_fu_317_p2 <= (icmp_ln166_fu_279_p2 or and_ln164_fu_305_p2);
    grp_fu_359_p1 <= ap_const_lv5_3(3 - 1 downto 0);
    grp_fu_385_p1 <= ap_const_lv5_3(3 - 1 downto 0);
    icmp_ln164_fu_261_p2 <= "1" when (indvar_flatten178_fu_100 = ap_const_lv16_8440) else "0";
    icmp_ln166_fu_279_p2 <= "1" when (indvar_flatten165_fu_92 = ap_const_lv10_211) else "0";
    icmp_ln168_fu_299_p2 <= "1" when (block_in_w_k_fu_84 = ap_const_lv5_17) else "0";
    localIn_1_address0 <= zext_ln170_2_fu_489_p1(12 - 1 downto 0);
    localIn_1_ce0 <= localIn_1_ce0_local;

    localIn_1_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            localIn_1_ce0_local <= ap_const_logic_1;
        else 
            localIn_1_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    localIn_1_d0 <= ap_const_lv32_0;
    localIn_1_we0 <= localIn_1_we0_local;

    localIn_1_we0_local_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, trunc_ln166_1_fu_476_p1, trunc_ln168_fu_502_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln168_fu_502_p1 = ap_const_lv2_1) and (trunc_ln166_1_fu_476_p1 = ap_const_lv2_0))) then 
            localIn_1_we0_local <= ap_const_logic_1;
        else 
            localIn_1_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    localIn_2_address0 <= zext_ln170_2_fu_489_p1(12 - 1 downto 0);
    localIn_2_ce0 <= localIn_2_ce0_local;

    localIn_2_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            localIn_2_ce0_local <= ap_const_logic_1;
        else 
            localIn_2_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    localIn_2_d0 <= ap_const_lv32_0;
    localIn_2_we0 <= localIn_2_we0_local;

    localIn_2_we0_local_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, trunc_ln166_1_fu_476_p1, trunc_ln168_fu_502_p1)
    begin
        if ((not((trunc_ln168_fu_502_p1 = ap_const_lv2_0)) and not((trunc_ln168_fu_502_p1 = ap_const_lv2_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln166_1_fu_476_p1 = ap_const_lv2_0))) then 
            localIn_2_we0_local <= ap_const_logic_1;
        else 
            localIn_2_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    localIn_3_address0 <= zext_ln170_2_fu_489_p1(12 - 1 downto 0);
    localIn_3_ce0 <= localIn_3_ce0_local;

    localIn_3_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            localIn_3_ce0_local <= ap_const_logic_1;
        else 
            localIn_3_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    localIn_3_d0 <= ap_const_lv32_0;
    localIn_3_we0 <= localIn_3_we0_local;

    localIn_3_we0_local_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, trunc_ln166_1_fu_476_p1, trunc_ln168_fu_502_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln168_fu_502_p1 = ap_const_lv2_0) and (trunc_ln166_1_fu_476_p1 = ap_const_lv2_1))) then 
            localIn_3_we0_local <= ap_const_logic_1;
        else 
            localIn_3_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    localIn_4_address0 <= zext_ln170_2_fu_489_p1(12 - 1 downto 0);
    localIn_4_ce0 <= localIn_4_ce0_local;

    localIn_4_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            localIn_4_ce0_local <= ap_const_logic_1;
        else 
            localIn_4_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    localIn_4_d0 <= ap_const_lv32_0;
    localIn_4_we0 <= localIn_4_we0_local;

    localIn_4_we0_local_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, trunc_ln166_1_fu_476_p1, trunc_ln168_fu_502_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln168_fu_502_p1 = ap_const_lv2_1) and (trunc_ln166_1_fu_476_p1 = ap_const_lv2_1))) then 
            localIn_4_we0_local <= ap_const_logic_1;
        else 
            localIn_4_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    localIn_5_address0 <= zext_ln170_2_fu_489_p1(12 - 1 downto 0);
    localIn_5_ce0 <= localIn_5_ce0_local;

    localIn_5_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            localIn_5_ce0_local <= ap_const_logic_1;
        else 
            localIn_5_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    localIn_5_d0 <= ap_const_lv32_0;
    localIn_5_we0 <= localIn_5_we0_local;

    localIn_5_we0_local_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, trunc_ln166_1_fu_476_p1, trunc_ln168_fu_502_p1)
    begin
        if ((not((trunc_ln168_fu_502_p1 = ap_const_lv2_0)) and not((trunc_ln168_fu_502_p1 = ap_const_lv2_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln166_1_fu_476_p1 = ap_const_lv2_1))) then 
            localIn_5_we0_local <= ap_const_logic_1;
        else 
            localIn_5_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    localIn_6_address0 <= zext_ln170_2_fu_489_p1(12 - 1 downto 0);
    localIn_6_ce0 <= localIn_6_ce0_local;

    localIn_6_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            localIn_6_ce0_local <= ap_const_logic_1;
        else 
            localIn_6_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    localIn_6_d0 <= ap_const_lv32_0;
    localIn_6_we0 <= localIn_6_we0_local;

    localIn_6_we0_local_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, trunc_ln166_1_fu_476_p1, trunc_ln168_fu_502_p1)
    begin
        if ((not((trunc_ln166_1_fu_476_p1 = ap_const_lv2_0)) and not((trunc_ln166_1_fu_476_p1 = ap_const_lv2_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln168_fu_502_p1 = ap_const_lv2_0))) then 
            localIn_6_we0_local <= ap_const_logic_1;
        else 
            localIn_6_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    localIn_7_address0 <= zext_ln170_2_fu_489_p1(12 - 1 downto 0);
    localIn_7_ce0 <= localIn_7_ce0_local;

    localIn_7_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            localIn_7_ce0_local <= ap_const_logic_1;
        else 
            localIn_7_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    localIn_7_d0 <= ap_const_lv32_0;
    localIn_7_we0 <= localIn_7_we0_local;

    localIn_7_we0_local_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, trunc_ln166_1_fu_476_p1, trunc_ln168_fu_502_p1)
    begin
        if ((not((trunc_ln166_1_fu_476_p1 = ap_const_lv2_0)) and not((trunc_ln166_1_fu_476_p1 = ap_const_lv2_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln168_fu_502_p1 = ap_const_lv2_1))) then 
            localIn_7_we0_local <= ap_const_logic_1;
        else 
            localIn_7_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    localIn_8_address0 <= zext_ln170_2_fu_489_p1(12 - 1 downto 0);
    localIn_8_ce0 <= localIn_8_ce0_local;

    localIn_8_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            localIn_8_ce0_local <= ap_const_logic_1;
        else 
            localIn_8_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    localIn_8_d0 <= ap_const_lv32_0;
    localIn_8_we0 <= localIn_8_we0_local;

    localIn_8_we0_local_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, trunc_ln166_1_fu_476_p1, trunc_ln168_fu_502_p1)
    begin
        if ((not((trunc_ln166_1_fu_476_p1 = ap_const_lv2_0)) and not((trunc_ln168_fu_502_p1 = ap_const_lv2_0)) and not((trunc_ln168_fu_502_p1 = ap_const_lv2_1)) and not((trunc_ln166_1_fu_476_p1 = ap_const_lv2_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            localIn_8_we0_local <= ap_const_logic_1;
        else 
            localIn_8_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    localIn_address0 <= zext_ln170_2_fu_489_p1(12 - 1 downto 0);
    localIn_ce0 <= localIn_ce0_local;

    localIn_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            localIn_ce0_local <= ap_const_logic_1;
        else 
            localIn_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    localIn_d0 <= ap_const_lv32_0;
    localIn_we0 <= localIn_we0_local;

    localIn_we0_local_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, trunc_ln166_1_fu_476_p1, trunc_ln168_fu_502_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (trunc_ln168_fu_502_p1 = ap_const_lv2_0) and (trunc_ln166_1_fu_476_p1 = ap_const_lv2_0))) then 
            localIn_we0_local <= ap_const_logic_1;
        else 
            localIn_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln166_fu_343_p0 <= mul_ln166_fu_343_p00(5 - 1 downto 0);
    mul_ln166_fu_343_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln166_fu_331_p3),11));
    mul_ln166_fu_343_p1 <= ap_const_lv11_2B(7 - 1 downto 0);
    mul_ln168_fu_369_p0 <= mul_ln168_fu_369_p00(5 - 1 downto 0);
    mul_ln168_fu_369_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(block_in_w_k_mid2_fu_323_p3),11));
    mul_ln168_fu_369_p1 <= ap_const_lv11_2B(7 - 1 downto 0);
    select_ln164_1_fu_440_p3 <= 
        add_ln164_fu_434_p2 when (icmp_ln166_reg_550_pp0_iter8_reg(0) = '1') else 
        block_in_ch_k_fu_96;
    select_ln164_fu_285_p3 <= 
        ap_const_lv5_0 when (icmp_ln166_fu_279_p2(0) = '1') else 
        block_in_h_k_fu_88;
    select_ln166_1_fu_403_p3 <= 
        ap_const_lv10_1 when (icmp_ln166_fu_279_p2(0) = '1') else 
        add_ln166_1_fu_397_p2;
    select_ln166_fu_331_p3 <= 
        add_ln166_fu_311_p2 when (and_ln164_fu_305_p2(0) = '1') else 
        select_ln164_fu_285_p3;
    tmp_3_fu_468_p3 <= (add_ln170_fu_462_p2 & ap_const_lv3_0);
    tmp_s_fu_451_p3 <= (trunc_ln166_fu_447_p1 & ap_const_lv3_0);
    trunc_ln166_1_fu_476_p1 <= grp_fu_359_p2(2 - 1 downto 0);
    trunc_ln166_fu_447_p1 <= select_ln164_1_fu_440_p3(6 - 1 downto 0);
    trunc_ln168_fu_502_p1 <= grp_fu_385_p2(2 - 1 downto 0);
    xor_ln164_fu_293_p2 <= (icmp_ln166_fu_279_p2 xor ap_const_lv1_1);
    zext_ln170_1_fu_480_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_reg_570_pp0_iter8_reg),12));
    zext_ln170_2_fu_489_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln170_1_fu_483_p2),64));
    zext_ln170_fu_459_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_565_pp0_iter8_reg),9));
end behav;
